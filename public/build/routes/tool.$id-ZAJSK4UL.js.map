{
  "version": 3,
  "sources": ["../../../app/routes/tool.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/tool.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/tool.$id.tsx\");\n  import.meta.hot.lastModified = \"1749400037912.7495\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nexport const meta = () => {\n  return [{\n    title: \"Tool Details - Toolshed\"\n  }, {\n    name: \"description\",\n    content: \"View tool details and contact the owner\"\n  }];\n};\nexport async function loader({\n  params\n}) {\n  const toolId = params.id;\n  if (!toolId) {\n    throw new Response(\"Tool not found\", {\n      status: 404\n    });\n  }\n\n  // TODO: Fetch tool data from database when schema is integrated\n  // For now, return placeholder response\n  return json({\n    toolId\n  });\n}\nexport default function ToolDetail() {\n  _s();\n  const {\n    toolId\n  } = useLoaderData();\n  return <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n        {/* Tool not found state */}\n        <div className=\"text-center py-12 px-6\">\n          <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.386 0-4.735.832-6.565 2.436l-.693-.693A8.963 8.963 0 0112 13.5c2.213 0 4.337.815 5.985 2.29l-.692.692z\" />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Tool not found</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Tool with ID \"{toolId}\" could not be found. This feature will be available once the database schema is integrated.\n          </p>\n          <div className=\"mt-6\">\n            <a href=\"/browse\" className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n              <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n              </svg>\n              Back to Browse\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s(ToolDetail, \"OvNDs/yhujxOLoLuvCqFLd9xlug=\", false, function () {\n  return [useLoaderData];\n});\n_c = ToolDetail;\nvar _c;\n$RefreshReg$(_c, \"ToolDetail\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAoCT;AAxDZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAKO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AAiBe,SAAR,aAA8B;AACnC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,+CAClB,6DAAC,SAAI,WAAU,wEAEb,6DAAC,SAAI,WAAU,0BACb;AAAA,uDAAC,SAAI,WAAU,mCAAkC,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACzF,6DAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,yLAArE;AAAA;AAAA;AAAA;AAAA,WAA2P,KAD7P;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,QAAG,WAAU,0CAAyC,8BAAvD;AAAA;AAAA;AAAA;AAAA,WAAqE;AAAA,IACrE,mDAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,MACzB;AAAA,MAAO;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,SAAI,WAAU,QACb,6DAAC,OAAE,MAAK,WAAU,WAAU,0NAC1B;AAAA,yDAAC,SAAI,WAAU,sBAAqB,MAAK,QAAO,QAAO,gBAAe,SAAQ,aAC5E,6DAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,iCAArE;AAAA;AAAA;AAAA;AAAA,aAAmG,KADrG;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAAM;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA,WAKA,KANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAfF;AAAA;AAAA;AAAA;AAAA,SAgBA,KAlBF;AAAA;AAAA;AAAA;AAAA,SAmBA,KApBG;AAAA;AAAA;AAAA;AAAA,SAqBL;AACJ;AACA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
