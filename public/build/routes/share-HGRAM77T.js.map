{
  "version": 3,
  "sources": ["../../../app/routes/share.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/share.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/share.tsx\");\n  import.meta.hot.lastModified = \"1749400012841.768\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport { useState } from \"react\";\nexport const meta = () => {\n  return [{\n    title: \"Share a Tool - Toolshed\"\n  }, {\n    name: \"description\",\n    content: \"Share your tools and resources with the community\"\n  }];\n};\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n\n  // Basic form validation\n  const title = formData.get(\"title\");\n  const description = formData.get(\"description\");\n  const category = formData.get(\"category\");\n  const errors = {};\n  if (!title || typeof title !== \"string\" || title.trim().length === 0) {\n    errors.title = \"Tool name is required\";\n  }\n  if (!description || typeof description !== \"string\" || description.trim().length === 0) {\n    errors.description = \"Description is required\";\n  }\n  if (!category || typeof category !== \"string\" || category === \"\") {\n    errors.category = \"Category is required\";\n  }\n  if (Object.keys(errors).length > 0) {\n    return json({\n      errors,\n      success: false\n    }, {\n      status: 400\n    });\n  }\n\n  // TODO: Save to database when schema is integrated\n  console.log(\"Tool sharing data:\", {\n    title,\n    description,\n    category,\n    condition: formData.get(\"condition\"),\n    availability: formData.get(\"availability\"),\n    location: formData.get(\"location\"),\n    contactMethod: formData.get(\"contactMethod\")\n  });\n\n  // For now, redirect to browse page\n  return redirect(\"/browse?shared=true\");\n}\nexport default function Share() {\n  _s();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const categories = [{\n    id: \"\",\n    name: \"Select a category\"\n  }, {\n    id: \"power-tools\",\n    name: \"Power Tools\"\n  }, {\n    id: \"hand-tools\",\n    name: \"Hand Tools\"\n  }, {\n    id: \"garden\",\n    name: \"Garden & Outdoor\"\n  }, {\n    id: \"automotive\",\n    name: \"Automotive\"\n  }, {\n    id: \"home\",\n    name: \"Home & DIY\"\n  }, {\n    id: \"specialty\",\n    name: \"Specialty Tools\"\n  }];\n  const conditions = [{\n    id: \"excellent\",\n    name: \"Excellent\"\n  }, {\n    id: \"good\",\n    name: \"Good\"\n  }, {\n    id: \"fair\",\n    name: \"Fair\"\n  }, {\n    id: \"needs-repair\",\n    name: \"Needs Repair\"\n  }];\n  const availabilityOptions = [{\n    id: \"available\",\n    name: \"Available Now\"\n  }, {\n    id: \"limited\",\n    name: \"Limited Availability\"\n  }, {\n    id: \"weekends\",\n    name: \"Weekends Only\"\n  }, {\n    id: \"by-appointment\",\n    name: \"By Appointment\"\n  }];\n  return <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">Share a Tool</h1>\n        <p className=\"text-lg text-gray-600\">\n          Add your tool to the community sharing network\n        </p>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <Form method=\"post\" className=\"space-y-6\">\n          {/* Tool Name */}\n          <div>\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Tool Name *\n            </label>\n            <input type=\"text\" id=\"title\" name=\"title\" className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-1 ${actionData?.errors?.title ? \"border-red-300 focus:ring-red-500 focus:border-red-500\" : \"border-gray-300 focus:ring-blue-500 focus:border-blue-500\"}`} placeholder=\"e.g., Power Drill, Lawnmower, Socket Set\" />\n            {actionData?.errors?.title && <p className=\"mt-1 text-sm text-red-600\">{actionData.errors.title}</p>}\n          </div>\n\n          {/* Description */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Description *\n            </label>\n            <textarea id=\"description\" name=\"description\" rows={4} className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-1 ${actionData?.errors?.description ? \"border-red-300 focus:ring-red-500 focus:border-red-500\" : \"border-gray-300 focus:ring-blue-500 focus:border-blue-500\"}`} placeholder=\"Describe the tool, its features, and any important details...\" />\n            {actionData?.errors?.description && <p className=\"mt-1 text-sm text-red-600\">{actionData.errors.description}</p>}\n          </div>\n\n          {/* Category and Condition */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Category *\n              </label>\n              <select id=\"category\" name=\"category\" value={selectedCategory} onChange={e => setSelectedCategory(e.target.value)} className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-1 ${actionData?.errors?.category ? \"border-red-300 focus:ring-red-500 focus:border-red-500\" : \"border-gray-300 focus:ring-blue-500 focus:border-blue-500\"}`}>\n                {categories.map(category => <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>)}\n              </select>\n              {actionData?.errors?.category && <p className=\"mt-1 text-sm text-red-600\">{actionData.errors.category}</p>}\n            </div>\n\n            <div>\n              <label htmlFor=\"condition\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Condition\n              </label>\n              <select id=\"condition\" name=\"condition\" className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\">\n                {conditions.map(condition => <option key={condition.id} value={condition.id}>\n                    {condition.name}\n                  </option>)}\n              </select>\n            </div>\n          </div>\n\n          {/* Availability and Location */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"availability\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Availability\n              </label>\n              <select id=\"availability\" name=\"availability\" className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\">\n                {availabilityOptions.map(option => <option key={option.id} value={option.id}>\n                    {option.name}\n                  </option>)}\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                General Location\n              </label>\n              <input type=\"text\" id=\"location\" name=\"location\" className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"e.g., Downtown, West Side, ZIP code\" />\n            </div>\n          </div>\n\n          {/* Contact Method */}\n          <div>\n            <label htmlFor=\"contactMethod\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Preferred Contact Method\n            </label>\n            <select id=\"contactMethod\" name=\"contactMethod\" className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\">\n              <option value=\"message\">App Message</option>\n              <option value=\"email\">Email</option>\n              <option value=\"phone\">Phone</option>\n            </select>\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"pt-4\">\n            <button type=\"submit\" disabled={isSubmitting} className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\">\n              {isSubmitting ? \"Sharing Tool...\" : \"Share Tool\"}\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>;\n}\n_s(Share, \"/IJvwuBiPQ9J4ouJZ+z1QxafY5E=\", false, function () {\n  return [useActionData, useNavigation];\n});\n_c = Share;\nvar _c;\n$RefreshReg$(_c, \"Share\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
