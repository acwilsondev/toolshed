{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n  import.meta.hot.lastModified = \"1749404255824.5566\";\n}\n// REMIX HMR END\n\nimport { Form, Link, useActionData, useNavigation } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { authenticateUser } from \"~/utils/db.server\";\nexport const meta = () => {\n  return [{\n    title: \"Sign In - Toolshed\"\n  }];\n};\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\")?.toString();\n  const password = formData.get(\"password\")?.toString();\n  if (!email || !password) {\n    return json({\n      error: \"Email and password are required\"\n    }, {\n      status: 400\n    });\n  }\n  try {\n    const user = await authenticateUser(email, password);\n    if (!user) {\n      return json({\n        error: \"Invalid email or password\"\n      }, {\n        status: 401\n      });\n    }\n\n    // In a real app, you'd set a session cookie here\n    // For now, redirect to profile with success\n    return redirect(`/profile?welcome=true`);\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    return json({\n      error: \"Something went wrong. Please try again.\"\n    }, {\n      status: 500\n    });\n  }\n}\nexport default function Login() {\n  _s();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  return <div className=\"min-h-screen bg-neighborhood-cloud flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h1 className=\"text-center text-3xl font-bold text-neighborhood-slate\">\n            Sign in to Toolshed\n          </h1>\n          <p className=\"mt-2 text-center text-sm text-neighborhood-slate/70\">\n            Welcome back to your community\n          </p>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-md p-8\">\n          <Form method=\"post\" className=\"space-y-6\">\n            {actionData?.error && <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n                <p className=\"text-red-600 text-sm\">{actionData.error}</p>\n              </div>}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Email address\n              </label>\n              <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"email\" required className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\" placeholder=\"Enter your email\" />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Password\n              </label>\n              <input id=\"password\" name=\"password\" type=\"password\" autoComplete=\"current-password\" required className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\" placeholder=\"Enter your password\" />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input id=\"remember-me\" name=\"remember-me\" type=\"checkbox\" className=\"h-4 w-4 text-neighborhood-goldenrod focus:ring-neighborhood-goldenrod border-gray-300 rounded\" />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-neighborhood-slate\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <Link to=\"/forgot-password\" className=\"font-medium text-neighborhood-goldenrod hover:text-neighborhood-goldenrod/80\">\n                  Forgot your password?\n                </Link>\n              </div>\n            </div>\n\n            <div>\n              <button type=\"submit\" disabled={isSubmitting} className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-neighborhood-goldenrod hover:bg-neighborhood-goldenrod/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neighborhood-goldenrod disabled:opacity-50 disabled:cursor-not-allowed\">\n                {isSubmitting ? \"Signing in...\" : \"Sign in\"}\n              </button>\n            </div>\n          </Form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white text-neighborhood-slate/70\">New to Toolshed?</span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <Link to=\"/register\" className=\"w-full flex justify-center py-2 px-4 border border-neighborhood-slate rounded-md shadow-sm text-sm font-medium text-neighborhood-slate bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neighborhood-goldenrod\">\n                Create an account\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-xs text-neighborhood-slate/60\">\n              Demo account: alice@neighborhood.local / password123\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s(Login, \"e3rMULficn7ldQYYArv00m53mwQ=\", false, function () {\n  return [useActionData, useNavigation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
