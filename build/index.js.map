{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/api.reservations.$id.events.tsx", "../shared/schema.ts", "../server/db.ts", "../server/storage.ts", "../app/utils/db.server.ts", "../app/routes/api.reservations._index.tsx", "../app/routes/api.reservations.events.tsx", "../app/routes/api.reservations.$id.tsx", "../app/routes/admin.reservations.tsx", "../app/routes/api.items._index.tsx", "../app/routes/api.users._index.tsx", "../app/routes/api.auth.logout.tsx", "../app/routes/api.auth.login.tsx", "../app/routes/api.items.$id.tsx", "../app/routes/api.users.$id.tsx", "../app/routes/admin._index.tsx", "../app/routes/admin.items.tsx", "../app/routes/admin.users.tsx", "../app/routes/api.health.tsx", "../app/routes/api-docs.tsx", "../app/routes/register.tsx", "../app/routes/tool.$id.tsx", "../app/routes/profile.tsx", "../app/routes/_index.tsx", "../app/routes/browse.tsx", "../app/routes/logout.tsx", "../app/routes/login.tsx", "../app/routes/share.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Links,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  LiveReload,\n  isRouteErrorResponse,\n  useRouteError } from\n\"@remix-run/react\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport globalStyles from \"~/styles/global.css\";\n\nexport const links: LinksFunction = () => {\n  return [\n  { rel: \"stylesheet\", href: globalStyles },\n  {\n    rel: \"preconnect\",\n    href: \"https://fonts.googleapis.com\"\n  },\n  {\n    rel: \"preconnect\",\n    href: \"https://fonts.gstatic.com\",\n    crossOrigin: \"anonymous\"\n  },\n  {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap\"\n  }];\n\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <title>Toolshed</title>\n        <Links />\n      </head>\n      <body style={{ margin: 0, padding: 0, backgroundColor: \"#f7fafc\" }}>\n        <nav style={{ backgroundColor: \"white\", borderBottom: \"1px solid #e2e8f0\", padding: \"1rem 0\" }}>\n          <div style={{ maxWidth: \"1200px\", margin: \"0 auto\", padding: \"0 2rem\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n            <h1 style={{ margin: 0, fontSize: \"1.5rem\", fontWeight: \"bold\", color: \"#2d3748\" }}>Toolshed</h1>\n            <div style={{ display: \"flex\", gap: \"1rem\" }}>\n              <a href=\"/login\" style={{ color: \"#4a5568\", textDecoration: \"none\" }}>Sign In</a>\n              <a href=\"/register\" style={{ backgroundColor: \"#f6ad55\", color: \"white\", padding: \"0.5rem 1rem\", borderRadius: \"0.25rem\", textDecoration: \"none\" }}>Join</a>\n            </div>\n          </div>\n        </nav>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n\n  if (isRouteErrorResponse(error)) {\n    return (\n      <html lang=\"en\">\n        <head>\n          <title>Error - Toolshed</title>\n          <Links />\n        </head>\n        <body style={{ margin: 0, padding: 0, backgroundColor: \"#f7fafc\" }}>\n          <div style={{ minHeight: \"100vh\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n            <div style={{ textAlign: \"center\" }}>\n              <h1 style={{ fontSize: \"4rem\", fontWeight: \"bold\", color: \"#1a202c\", marginBottom: \"1rem\" }}>\n                {error.status}\n              </h1>\n              <h2 style={{ fontSize: \"1.5rem\", fontWeight: \"600\", color: \"#2d3748\", marginBottom: \"1rem\" }}>\n                {error.statusText}\n              </h2>\n              <p style={{ color: \"#4a5568\", marginBottom: \"2rem\" }}>\n                {error.data || \"Something went wrong. Please try again later.\"}\n              </p>\n              <a\n                href=\"/\"\n                style={{\n                  display: \"inline-flex\",\n                  alignItems: \"center\",\n                  padding: \"0.75rem 1.5rem\",\n                  backgroundColor: \"#f6ad55\",\n                  color: \"white\",\n                  textDecoration: \"none\",\n                  borderRadius: \"0.5rem\",\n                  fontWeight: \"600\"\n                }}>\n\n                Go Home\n              </a>\n            </div>\n          </div>\n          <Scripts />\n        </body>\n      </html>);\n\n  }\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Error - Toolshed</title>\n        <Links />\n      </head>\n      <body style={{ margin: 0, padding: 0, backgroundColor: \"#f7fafc\" }}>\n        <div style={{ minHeight: \"100vh\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n          <div style={{ textAlign: \"center\" }}>\n            <h1 style={{ fontSize: \"2rem\", fontWeight: \"bold\", color: \"#1a202c\", marginBottom: \"1rem\" }}>\n              Something went wrong\n            </h1>\n            <p style={{ color: \"#4a5568\", marginBottom: \"2rem\" }}>\n              We encountered an unexpected error. Please try again later.\n            </p>\n            <a\n              href=\"/\"\n              style={{\n                display: \"inline-flex\",\n                alignItems: \"center\",\n                padding: \"0.75rem 1.5rem\",\n                backgroundColor: \"#f6ad55\",\n                color: \"white\",\n                textDecoration: \"none\",\n                borderRadius: \"0.5rem\",\n                fontWeight: \"600\"\n              }}>\n\n              Go Home\n            </a>\n          </div>\n        </div>\n        <Scripts />\n      </body>\n    </html>);\n\n}", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getReservationEvents } from \"~/utils/db.server\";\n\nfunction requireAuth(request: Request) {\n  const authHeader = request.headers.get(\"Authorization\");\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return authHeader.replace(\"Bearer \", \"\");\n}\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const { id } = params;\n    if (!id) {\n      return json({ error: \"Reservation ID is required\" }, { status: 400 });\n    }\n\n    const events = await getReservationEvents(50, 0, id);\n    \n    if (events.length === 0) {\n      return json({ error: \"Reservation not found\" }, { status: 404 });\n    }\n\n    return json(events);\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Get reservation events error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import {\n  pgTable,\n  text,\n  varchar,\n  timestamp,\n  jsonb,\n  index,\n  integer,\n  boolean,\n  serial,\n} from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\n\n// Session storage table for authentication\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// Users table\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().notNull(),\n  name: varchar(\"name\", { length: 255 }).notNull(),\n  email: varchar(\"email\", { length: 255 }).unique().notNull(),\n  password: varchar(\"password\", { length: 255 }).notNull(),\n  neighborhood: varchar(\"neighborhood\", { length: 255 }).notNull().default(''),\n  contactMethod: varchar(\"contact_method\", { length: 255 }).notNull().default(''),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Items table\nexport const items = pgTable(\"items\", {\n  id: varchar(\"id\").primaryKey().notNull(),\n  ownerId: varchar(\"owner_id\").notNull().references(() => users.id),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  description: text(\"description\"),\n  category: varchar(\"category\", { length: 100 }).notNull(),\n  tags: jsonb(\"tags\").$type<string[]>().default([]),\n  location: varchar(\"location\", { length: 255 }).notNull(),\n  photoPath: varchar(\"photo_path\", { length: 500 }),\n  quantityTotal: integer(\"quantity_total\").notNull().default(1),\n  quantityAvailable: integer(\"quantity_available\").notNull().default(1),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Reservation events table (event sourcing)\nexport const reservationEvents = pgTable(\"reservation_events\", {\n  id: varchar(\"id\").primaryKey().notNull(),\n  reservationId: varchar(\"reservation_id\").notNull(),\n  eventType: varchar(\"event_type\", { length: 50 }).notNull(),\n  actorId: varchar(\"actor_id\").notNull().references(() => users.id),\n  timestamp: timestamp(\"timestamp\").defaultNow().notNull(),\n  quantity: integer(\"quantity\"),\n  startDate: timestamp(\"start_date\"),\n  endDate: timestamp(\"end_date\"),\n  notes: text(\"notes\"),\n  expectedVersion: integer(\"expected_version\"),\n});\n\n// Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  items: many(items),\n  reservationEvents: many(reservationEvents),\n}));\n\nexport const itemsRelations = relations(items, ({ one }) => ({\n  owner: one(users, {\n    fields: [items.ownerId],\n    references: [users.id],\n  }),\n}));\n\nexport const reservationEventsRelations = relations(reservationEvents, ({ one }) => ({\n  actor: one(users, {\n    fields: [reservationEvents.actorId],\n    references: [users.id],\n  }),\n}));\n\n// Type exports for the application\nexport type User = typeof users.$inferSelect;\nexport type UpsertUser = typeof users.$inferInsert;\nexport type Item = typeof items.$inferSelect;\nexport type InsertItem = typeof items.$inferInsert;\nexport type ReservationEvent = typeof reservationEvents.$inferSelect;\nexport type InsertReservationEvent = typeof reservationEvents.$inferInsert;", "import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"../shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });", "import {\n  users,\n  items,\n  reservationEvents,\n  type User,\n  type UpsertUser,\n  type Item,\n  type InsertItem,\n  type ReservationEvent,\n  type InsertReservationEvent,\n} from \"../shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc, and, gte } from \"drizzle-orm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ReservationStatus, ReservationEventType, type ReservationState, type CreateUserRequest, type CreateItemRequest, type CreateReservationEventRequest } from \"../app/utils/types\";\n\n// Interface for storage operations\nexport interface IStorage {\n  // User operations (mandatory for Replit Auth)\n  getUser(id: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n  \n  // Additional user operations\n  getUserByEmail(email: string): Promise<User | null>;\n  createUser(userData: CreateUserRequest): Promise<User>;\n  updateUser(id: string, userData: Partial<CreateUserRequest>): Promise<User | null>;\n  deleteUser(id: string): Promise<boolean>;\n  getUsers(limit?: number, offset?: number): Promise<User[]>;\n  \n  // Item operations\n  getItems(limit?: number, offset?: number): Promise<Item[]>;\n  getItemById(id: string): Promise<Item | null>;\n  createItem(itemData: CreateItemRequest): Promise<Item>;\n  updateItem(id: string, itemData: Partial<CreateItemRequest>): Promise<Item | null>;\n  deleteItem(id: string): Promise<boolean>;\n  \n  // Reservation operations (event sourced)\n  getReservationEvents(limit?: number, offset?: number, reservationId?: string, afterTimestamp?: Date): Promise<ReservationEvent[]>;\n  createReservationEvent(eventData: CreateReservationEventRequest, actorId: string): Promise<ReservationEvent>;\n  getReservationById(id: string): Promise<ReservationState | null>;\n  getReservations(limit?: number, offset?: number, itemId?: string, requesterId?: string, status?: ReservationStatus): Promise<ReservationState[]>;\n  \n  // Authentication\n  authenticateUser(email: string, password: string): Promise<User | null>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations (mandatory for Replit Auth)\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // Additional user operations\n  async getUserByEmail(email: string): Promise<User | null> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user || null;\n  }\n\n  async createUser(userData: CreateUserRequest): Promise<User> {\n    const newUser = {\n      id: uuidv4(),\n      name: userData.name,\n      email: userData.email,\n      password: userData.password,\n      neighborhood: userData.neighborhood || '',\n      contactMethod: userData.contact_method || '',\n    };\n    \n    const [user] = await db.insert(users).values(newUser).returning();\n    return user;\n  }\n\n  async updateUser(id: string, userData: Partial<CreateUserRequest>): Promise<User | null> {\n    const updateData: Partial<typeof users.$inferInsert> = {\n      ...(userData.name && { name: userData.name }),\n      ...(userData.email && { email: userData.email }),\n      ...(userData.password && { password: userData.password }),\n      ...(userData.neighborhood && { neighborhood: userData.neighborhood }),\n      ...(userData.contact_method && { contactMethod: userData.contact_method }),\n      updatedAt: new Date(),\n    };\n\n    const [user] = await db\n      .update(users)\n      .set(updateData)\n      .where(eq(users.id, id))\n      .returning();\n    \n    return user || null;\n  }\n\n  async deleteUser(id: string): Promise<boolean> {\n    const result = await db.delete(users).where(eq(users.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  async getUsers(limit = 50, offset = 0): Promise<User[]> {\n    return await db.select().from(users).limit(limit).offset(offset);\n  }\n\n  // Item operations\n  async getItems(limit = 50, offset = 0): Promise<Item[]> {\n    return await db.select().from(items).limit(limit).offset(offset);\n  }\n\n  async getItemById(id: string): Promise<Item | null> {\n    const [item] = await db.select().from(items).where(eq(items.id, id));\n    return item || null;\n  }\n\n  async createItem(itemData: CreateItemRequest): Promise<Item> {\n    const newItem: InsertItem = {\n      id: uuidv4(),\n      ownerId: itemData.owner_id,\n      title: itemData.title,\n      description: itemData.description || null,\n      category: itemData.category,\n      tags: itemData.tags || [],\n      location: itemData.location,\n      photoPath: itemData.photo_path || null,\n      quantityTotal: itemData.quantity_total,\n      quantityAvailable: itemData.quantity_total,\n    };\n\n    const [item] = await db.insert(items).values(newItem).returning();\n    return item;\n  }\n\n  async updateItem(id: string, itemData: Partial<CreateItemRequest>): Promise<Item | null> {\n    const updateData: Partial<typeof items.$inferInsert> = {\n      ...(itemData.title && { title: itemData.title }),\n      ...(itemData.description !== undefined && { description: itemData.description }),\n      ...(itemData.category && { category: itemData.category }),\n      ...(itemData.tags && { tags: itemData.tags }),\n      ...(itemData.location && { location: itemData.location }),\n      ...(itemData.photo_path !== undefined && { photoPath: itemData.photo_path }),\n      ...(itemData.quantity_total && { quantityTotal: itemData.quantity_total }),\n    };\n\n    const [item] = await db\n      .update(items)\n      .set(updateData)\n      .where(eq(items.id, id))\n      .returning();\n    \n    return item || null;\n  }\n\n  async deleteItem(id: string): Promise<boolean> {\n    const result = await db.delete(items).where(eq(items.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Reservation operations (event sourced)\n  async getReservationEvents(\n    limit = 50,\n    offset = 0,\n    reservationId?: string,\n    afterTimestamp?: Date\n  ): Promise<ReservationEvent[]> {\n    if (reservationId && afterTimestamp) {\n      return await db.select().from(reservationEvents)\n        .where(and(\n          eq(reservationEvents.reservationId, reservationId),\n          gte(reservationEvents.timestamp, afterTimestamp)\n        ))\n        .orderBy(desc(reservationEvents.timestamp))\n        .limit(limit)\n        .offset(offset);\n    } else if (reservationId) {\n      return await db.select().from(reservationEvents)\n        .where(eq(reservationEvents.reservationId, reservationId))\n        .orderBy(desc(reservationEvents.timestamp))\n        .limit(limit)\n        .offset(offset);\n    } else if (afterTimestamp) {\n      return await db.select().from(reservationEvents)\n        .where(gte(reservationEvents.timestamp, afterTimestamp))\n        .orderBy(desc(reservationEvents.timestamp))\n        .limit(limit)\n        .offset(offset);\n    } else {\n      return await db.select().from(reservationEvents)\n        .orderBy(desc(reservationEvents.timestamp))\n        .limit(limit)\n        .offset(offset);\n    }\n  }\n\n  async createReservationEvent(\n    eventData: CreateReservationEventRequest,\n    actorId: string\n  ): Promise<ReservationEvent> {\n    const newEvent: InsertReservationEvent = {\n      id: uuidv4(),\n      reservationId: eventData.reservation_id || uuidv4(),\n      eventType: eventData.event_type,\n      actorId,\n      quantity: eventData.quantity || null,\n      startDate: eventData.start_date || null,\n      endDate: eventData.end_date || null,\n      notes: eventData.notes || null,\n      expectedVersion: eventData.expected_version || null,\n    };\n\n    const [event] = await db.insert(reservationEvents).values(newEvent).returning();\n    return event;\n  }\n\n  async getReservationById(id: string): Promise<ReservationState | null> {\n    const events = await this.getReservationEvents(undefined, undefined, id);\n    if (events.length === 0) return null;\n\n    return this.computeReservationStateFromEvents(events);\n  }\n\n  async getReservations(\n    limit = 50,\n    offset = 0,\n    itemId?: string,\n    requesterId?: string,\n    status?: ReservationStatus\n  ): Promise<ReservationState[]> {\n    const allEvents = await this.getReservationEvents();\n    const reservationMap = new Map<string, ReservationEvent[]>();\n\n    // Group events by reservation ID\n    for (const event of allEvents) {\n      if (!reservationMap.has(event.reservationId)) {\n        reservationMap.set(event.reservationId, []);\n      }\n      reservationMap.get(event.reservationId)!.push(event);\n    }\n\n    // Compute reservation states\n    const reservations: ReservationState[] = [];\n    for (const [reservationId, events] of reservationMap.entries()) {\n      const state = this.computeReservationStateFromEvents(events);\n      if (state) {\n        // Apply filters\n        if (itemId && state.item_id !== itemId) continue;\n        if (requesterId && state.requester_id !== requesterId) continue;\n        if (status && state.status !== status) continue;\n        \n        reservations.push(state);\n      }\n    }\n\n    // Apply pagination\n    return reservations\n      .sort((a, b) => b.updated_at.getTime() - a.updated_at.getTime())\n      .slice(offset, offset + limit);\n  }\n\n  // Authentication\n  async authenticateUser(email: string, password: string): Promise<User | null> {\n    const user = await this.getUserByEmail(email);\n    if (user && user.password === password) {\n      return user;\n    }\n    return null;\n  }\n\n  // Helper method to compute reservation state from events\n  private computeReservationStateFromEvents(events: ReservationEvent[]): ReservationState | null {\n    if (events.length === 0) return null;\n\n    // Sort events by timestamp\n    const sortedEvents = events.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n    \n    const firstEvent = sortedEvents[0];\n    const lastEvent = sortedEvents[sortedEvents.length - 1];\n\n    // Get item_id from the first event (should be from a 'requested' event)\n    const itemIdFromFirstEvent = this.getItemIdFromFirstEvent(firstEvent.reservationId);\n\n    let state: ReservationState = {\n      id: firstEvent.reservationId,\n      item_id: itemIdFromFirstEvent || '', // Will be updated when we have proper item tracking\n      owner_id: '', // Will be resolved from item\n      requester_id: firstEvent.actorId,\n      status: ReservationStatus.PENDING,\n      quantity_requested: firstEvent.quantity || 1,\n      start_date: firstEvent.startDate,\n      end_date: firstEvent.endDate,\n      notes: firstEvent.notes,\n      version: sortedEvents.length,\n      created_at: firstEvent.timestamp,\n      updated_at: lastEvent.timestamp,\n    };\n\n    // Apply events in order to compute final state\n    for (const event of sortedEvents) {\n      switch (event.eventType as ReservationEventType) {\n        case ReservationEventType.REQUESTED:\n          state.status = ReservationStatus.PENDING;\n          if (event.quantity) state.quantity_requested = event.quantity;\n          if (event.startDate) state.start_date = event.startDate;\n          if (event.endDate) state.end_date = event.endDate;\n          if (event.notes) state.notes = event.notes;\n          break;\n        case ReservationEventType.APPROVED:\n          state.status = ReservationStatus.APPROVED;\n          break;\n        case ReservationEventType.REJECTED:\n          state.status = ReservationStatus.REJECTED;\n          break;\n        case ReservationEventType.ACTIVATED:\n          state.status = ReservationStatus.ACTIVE;\n          break;\n        case ReservationEventType.RETURNED:\n          state.status = ReservationStatus.RETURNED;\n          break;\n        case ReservationEventType.CANCELLED:\n          state.status = ReservationStatus.CANCELLED;\n          break;\n        case ReservationEventType.EXTENDED:\n          if (event.endDate) state.end_date = event.endDate;\n          break;\n        case ReservationEventType.NOTES_UPDATED:\n          if (event.notes) state.notes = event.notes;\n          break;\n      }\n      state.updated_at = event.timestamp;\n    }\n\n    return state;\n  }\n\n  private getItemIdFromFirstEvent(reservationId: string): string {\n    // For now, return empty string - this would need to be tracked properly\n    // In a real implementation, we'd store item_id in the reservation events\n    return '';\n  }\n}\n\nexport const storage = new DatabaseStorage();", "// PostgreSQL database layer with event sourcing\nimport { storage } from \"../../server/storage\";\nimport type { \n  User, \n  Item, \n  ReservationState,\n  ReservationEvent,\n  CreateUserRequest,\n  CreateItemRequest,\n  CreateReservationEventRequest,\n  PaginatedResponse\n} from './types';\nimport { \n  ReservationStatus,\n  ReservationEventType\n} from './types';\nimport bcrypt from 'bcryptjs';\n\nexport async function initializeDatabase() {\n  // Insert sample data if database is empty\n  const existingUsers = await storage.getUsers(1);\n  if (existingUsers.length === 0) {\n    // Create sample users with hashed passwords\n    const sampleUsers = [\n      {\n        name: \"Alice Johnson\",\n        email: \"alice@neighborhood.local\",\n        password: await bcrypt.hash('password123', 10),\n        neighborhood: \"Downtown\",\n        contact_method: \"message\"\n      },\n      {\n        name: \"Bob Smith\", \n        email: \"bob@neighborhood.local\",\n        password: await bcrypt.hash('password123', 10),\n        neighborhood: \"Riverside\",\n        contact_method: \"email\"\n      },\n      {\n        name: \"Carol Davis\",\n        email: \"carol@neighborhood.local\",\n        password: await bcrypt.hash('password123', 10),\n        neighborhood: \"Hillside\",\n        contact_method: \"phone\"\n      }\n    ];\n\n    for (const user of sampleUsers) {\n      await storage.createUser(user);\n    }\n\n    // Get created user IDs for items\n    const createdUsers = await storage.getUsers();\n    const alice = createdUsers.find(u => u.name === \"Alice Johnson\");\n    const bob = createdUsers.find(u => u.name === \"Bob Smith\");\n    \n    if (alice && bob) {\n      // Create sample items\n      const sampleItems = [\n        {\n          owner_id: alice.id,\n          title: \"Electric Drill\",\n          description: \"Cordless drill with various bits\",\n          category: \"Tools\",\n          tags: [\"power tool\", \"cordless\"],\n          location: \"Downtown\",\n          quantity_total: 1\n        },\n        {\n          owner_id: bob.id,\n          title: \"Ladder\",\n          description: \"6-foot aluminum step ladder\",\n          category: \"Tools\", \n          tags: [\"ladder\", \"aluminum\"],\n          location: \"Riverside\",\n          quantity_total: 1\n        }\n      ];\n\n      for (const item of sampleItems) {\n        await storage.createItem(item);\n      }\n    }\n  }\n}\n\nexport function computeReservationState(reservationId: string): ReservationState | null {\n  // This function is now handled by the storage layer\n  return null;\n}\n\n// User operations\nexport async function getUsers(limit = 50, offset = 0): Promise<User[]> {\n  return await storage.getUsers(limit, offset);\n}\n\nexport async function getUserById(id: string): Promise<User | null> {\n  const user = await storage.getUser(id);\n  return user || null;\n}\n\nexport async function getUserByEmail(email: string): Promise<User | null> {\n  return await storage.getUserByEmail(email);\n}\n\nexport async function createUser(userData: CreateUserRequest): Promise<User> {\n  // Hash password before storing\n  const hashedData = {\n    ...userData,\n    password: await bcrypt.hash(userData.password, 10)\n  };\n  return await storage.createUser(hashedData);\n}\n\nexport async function updateUser(id: string, userData: Partial<CreateUserRequest>): Promise<User | null> {\n  if (userData.password) {\n    userData.password = await bcrypt.hash(userData.password, 10);\n  }\n  return await storage.updateUser(id, userData);\n}\n\nexport async function deleteUser(id: string): Promise<boolean> {\n  return await storage.deleteUser(id);\n}\n\n// Item operations\nexport async function getItems(limit = 50, offset = 0): Promise<Item[]> {\n  return await storage.getItems(limit, offset);\n}\n\nexport async function getItemById(id: string): Promise<Item | null> {\n  return await storage.getItemById(id);\n}\n\nexport async function createItem(itemData: CreateItemRequest): Promise<Item> {\n  return await storage.createItem(itemData);\n}\n\nexport async function updateItem(id: string, itemData: Partial<CreateItemRequest>): Promise<Item | null> {\n  return await storage.updateItem(id, itemData);\n}\n\nexport async function deleteItem(id: string): Promise<boolean> {\n  return await storage.deleteItem(id);\n}\n\n// Reservation operations\nexport async function getReservations(\n  limit = 50,\n  offset = 0,\n  itemId?: string,\n  requesterId?: string,\n  status?: ReservationStatus\n): Promise<ReservationState[]> {\n  return await storage.getReservations(limit, offset, itemId, requesterId, status);\n}\n\nexport async function getReservationById(id: string): Promise<ReservationState | null> {\n  return await storage.getReservationById(id);\n}\n\nexport async function getReservationEvents(\n  limit = 50,\n  offset = 0,\n  reservationId?: string,\n  afterTimestamp?: Date\n): Promise<ReservationEvent[]> {\n  return await storage.getReservationEvents(limit, offset, reservationId, afterTimestamp);\n}\n\nexport async function createReservationEvent(\n  eventData: CreateReservationEventRequest,\n  actorId: string\n): Promise<ReservationEvent> {\n  return await storage.createReservationEvent(eventData, actorId);\n}\n\n// Authentication\nexport async function authenticateUser(email: string, password: string): Promise<User | null> {\n  const user = await storage.getUserByEmail(email);\n  if (user && await bcrypt.compare(password, user.password)) {\n    return user;\n  }\n  return null;\n}\n\nexport function getHealthStatus() {\n  return {\n    status: \"healthy\",\n    timestamp: new Date().toISOString(),\n    database: \"postgresql\",\n    eventSourcing: \"enabled\"\n  };\n}", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getReservations } from \"~/utils/db.server\";\n\nfunction requireAuth(request: Request) {\n  const authHeader = request.headers.get(\"Authorization\");\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return authHeader.replace(\"Bearer \", \"\");\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const url = new URL(request.url);\n    const limit = parseInt(url.searchParams.get(\"limit\") || \"50\");\n    const offset = parseInt(url.searchParams.get(\"offset\") || \"0\");\n    const itemId = url.searchParams.get(\"item_id\") || undefined;\n    const requesterId = url.searchParams.get(\"requester_id\") || undefined;\n    const status = url.searchParams.get(\"status\") || undefined;\n\n    const reservations = await getReservations(limit, offset, itemId, requesterId, status);\n    return json(reservations);\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Get reservations error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getReservationEvents, createReservationEvent } from \"~/utils/db.server\";\nimport type { CreateReservationEventRequest } from \"~/utils/types\";\n\nfunction requireAuth(request: Request) {\n  const authHeader = request.headers.get(\"Authorization\");\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return authHeader.replace(\"Bearer \", \"\");\n}\n\nfunction extractUserIdFromToken(token: string): string {\n  // In production, decode the JWT and extract user ID\n  // For demo, extract from mock token format: \"mock-jwt-token-{userId}\"\n  return token.replace(\"mock-jwt-token-\", \"\");\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const url = new URL(request.url);\n    const limit = parseInt(url.searchParams.get(\"limit\") || \"50\");\n    const offset = parseInt(url.searchParams.get(\"offset\") || \"0\");\n    const reservationId = url.searchParams.get(\"reservation_id\") || undefined;\n    const afterTimestamp = url.searchParams.get(\"after_timestamp\") \n      ? new Date(url.searchParams.get(\"after_timestamp\")!) \n      : undefined;\n\n    const events = await getReservationEvents(limit, offset, reservationId, afterTimestamp);\n    return json(events);\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Get reservation events error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== \"POST\") {\n    return json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  try {\n    const token = requireAuth(request);\n    const actorId = extractUserIdFromToken(token);\n\n    const body: CreateReservationEventRequest = await request.json();\n    \n    if (!body.event_type) {\n      return json({ error: \"event_type is required\" }, { status: 400 });\n    }\n\n    // Convert date strings to Date objects\n    if (body.start_date && typeof body.start_date === 'string') {\n      body.start_date = new Date(body.start_date);\n    }\n    if (body.end_date && typeof body.end_date === 'string') {\n      body.end_date = new Date(body.end_date);\n    }\n\n    const event = await createReservationEvent(body, actorId);\n    return json(event, { status: 201 });\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    \n    if (error instanceof Error) {\n      if (error.message.includes(\"insufficient quantity\") || error.message.includes(\"not found\")) {\n        return json({ error: error.message }, { status: 409 });\n      }\n      return json({ error: error.message }, { status: 400 });\n    }\n    \n    console.error(\"Create reservation event error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getReservationById } from \"~/utils/db.server\";\n\nfunction requireAuth(request: Request) {\n  const authHeader = request.headers.get(\"Authorization\");\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return authHeader.replace(\"Bearer \", \"\");\n}\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const { id } = params;\n    if (!id) {\n      return json({ error: \"Reservation ID is required\" }, { status: 400 });\n    }\n\n    const reservation = await getReservationById(id);\n    if (!reservation) {\n      return json({ error: \"Reservation not found\" }, { status: 404 });\n    }\n\n    return json(reservation);\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Get reservation error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { MetaFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { getReservations, getUsers, getItems } from \"~/utils/db.server\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Reservation Management - Admin - Toolshed\" },\n    { name: \"description\", content: \"Manage platform reservations and bookings\" },\n  ];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const reservations = await getReservations(100, 0);\n  const users = await getUsers(100, 0);\n  const items = await getItems(100, 0);\n  \n  // Create maps for easier lookup\n  const userMap = new Map(users.map(user => [user.id, user.name]));\n  const itemMap = new Map(items.map(item => [item.id, item.title]));\n  \n  return json({ \n    reservations, \n    userMap: Object.fromEntries(userMap),\n    itemMap: Object.fromEntries(itemMap)\n  });\n}\n\nexport default function AdminReservations() {\n  const { reservations, userMap, itemMap } = useLoaderData<typeof loader>();\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\n      case 'approved': return 'bg-blue-100 text-blue-800';\n      case 'returned': return 'bg-gray-100 text-gray-800';\n      case 'cancelled': return 'bg-red-100 text-red-800';\n      case 'rejected': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-neighborhood-cloud\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <Link \n              to=\"/admin\" \n              className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80\"\n            >\n              \u2190 Back to Dashboard\n            </Link>\n          </div>\n          <h1 className=\"text-4xl font-bold text-neighborhood-slate mb-4\">\n            Reservation Management\n          </h1>\n          <p className=\"text-lg text-neighborhood-slate/80\">\n            Monitor and manage all platform reservations\n          </p>\n        </div>\n\n        {/* Status Summary */}\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-8\">\n          {['pending', 'approved', 'active', 'returned', 'cancelled'].map((status) => {\n            const count = reservations.filter(r => r.status === status).length;\n            return (\n              <div key={status} className=\"bg-white rounded-lg shadow-md p-4 text-center\">\n                <p className=\"text-2xl font-bold text-neighborhood-spruce\">{count}</p>\n                <p className=\"text-sm text-neighborhood-slate/60 capitalize\">{status}</p>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold text-neighborhood-slate\">\n                All Reservations ({reservations.length})\n              </h2>\n              <div className=\"flex gap-2\">\n                <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-neighborhood-spruce\">\n                  <option value=\"\">All Statuses</option>\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"approved\">Approved</option>\n                  <option value=\"active\">Active</option>\n                  <option value=\"returned\">Returned</option>\n                  <option value=\"cancelled\">Cancelled</option>\n                  <option value=\"rejected\">Rejected</option>\n                </select>\n                <input \n                  type=\"search\" \n                  placeholder=\"Search reservations...\" \n                  className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-neighborhood-spruce focus:border-transparent\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Reservation ID\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Item\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Requester\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Owner\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Dates\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {reservations.map((reservation) => (\n                  <tr key={reservation.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        #{reservation.id.slice(-8)}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        Qty: {reservation.quantity_requested}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {itemMap[reservation.item_id] || \"Unknown Item\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        {reservation.item_id.slice(-8)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {userMap[reservation.requester_id] || \"Unknown User\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        {reservation.requester_id.slice(-8)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {userMap[reservation.owner_id] || \"Unknown User\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        {reservation.owner_id.slice(-8)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(reservation.status)}`}>\n                        {reservation.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      <div>\n                        {reservation.start_date \n                          ? new Date(reservation.start_date).toLocaleDateString()\n                          : 'TBD'\n                        }\n                      </div>\n                      <div>\n                        to {reservation.end_date \n                          ? new Date(reservation.end_date).toLocaleDateString()\n                          : 'TBD'\n                        }\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <Link \n                        to={`/admin/reservations/${reservation.id}`}\n                        className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80 mr-4\"\n                      >\n                        View Details\n                      </Link>\n                      {reservation.status === 'pending' && (\n                        <button className=\"text-neighborhood-goldenrod hover:text-neighborhood-goldenrod/80\">\n                          Moderate\n                        </button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getItems, createItem } from \"~/utils/db.server\";\nimport type { CreateItemRequest } from \"~/utils/types\";\n\nfunction requireAuth(request: Request) {\n  const authHeader = request.headers.get(\"Authorization\");\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return authHeader.replace(\"Bearer \", \"\");\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const url = new URL(request.url);\n    const limit = parseInt(url.searchParams.get(\"limit\") || \"50\");\n    const offset = parseInt(url.searchParams.get(\"offset\") || \"0\");\n\n    const items = await getItems(limit, offset);\n    return json(items);\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Get items error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== \"POST\") {\n    return json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  try {\n    requireAuth(request);\n\n    const body: CreateItemRequest = await request.json();\n    \n    if (!body.owner_id || !body.title || !body.category || !body.location || !body.quantity_total) {\n      return json({ \n        error: \"owner_id, title, category, location, and quantity_total are required\" \n      }, { status: 400 });\n    }\n\n    const item = await createItem(body);\n    return json(item, { status: 201 });\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Create item error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getUsers, createUser } from \"~/utils/db.server\";\nimport type { CreateUserRequest } from \"~/utils/types\";\n\nfunction requireAuth(request: Request) {\n  const authHeader = request.headers.get(\"Authorization\");\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return authHeader.replace(\"Bearer \", \"\");\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const url = new URL(request.url);\n    const limit = parseInt(url.searchParams.get(\"limit\") || \"50\");\n    const offset = parseInt(url.searchParams.get(\"offset\") || \"0\");\n\n    const users = await getUsers(limit, offset);\n    return json(users);\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Get users error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== \"POST\") {\n    return json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  try {\n    requireAuth(request);\n\n    const body: CreateUserRequest = await request.json();\n    \n    if (!body.name || !body.email || !body.password) {\n      return json({ error: \"Name, email, and password are required\" }, { status: 400 });\n    }\n\n    const user = await createUser(body);\n    return json(user, { status: 201 });\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Create user error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { ActionFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== \"POST\") {\n    return json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  try {\n    const authHeader = request.headers.get(\"Authorization\");\n    \n    if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n      return json({ error: \"Invalid or missing token\" }, { status: 401 });\n    }\n\n    // In production, invalidate the JWT token\n    return json({ message: \"Successfully logged out\" }, { status: 200 });\n\n  } catch (error) {\n    console.error(\"Logout error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { ActionFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { authenticateUser, initializeDatabase } from \"~/utils/db.server\";\nimport type { LoginRequest, AuthResponse } from \"~/utils/types\";\nimport jwt from \"jsonwebtoken\";\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== \"POST\") {\n    return json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  try {\n    // Initialize database with sample data if needed\n    await initializeDatabase();\n\n    const body: LoginRequest = await request.json();\n    \n    if (!body.email || !body.password) {\n      return json({ error: \"Email and password are required\" }, { status: 400 });\n    }\n\n    const user = await authenticateUser(body.email, body.password);\n    \n    if (!user) {\n      return json({ error: \"Invalid credentials\" }, { status: 401 });\n    }\n\n    // Generate JWT token\n    const token = jwt.sign(\n      { userId: user.id, email: user.email, name: user.name },\n      process.env.JWT_SECRET || \"dev-secret-key\",\n      { expiresIn: \"24h\" }\n    );\n    \n    const response: AuthResponse = { token };\n    return json(response, { status: 200 });\n\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getItemById, updateItem, deleteItem } from \"~/utils/db.server\";\nimport type { CreateItemRequest } from \"~/utils/types\";\n\nfunction requireAuth(request: Request) {\n  const authHeader = request.headers.get(\"Authorization\");\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return authHeader.replace(\"Bearer \", \"\");\n}\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const { id } = params;\n    if (!id) {\n      return json({ error: \"Item ID is required\" }, { status: 400 });\n    }\n\n    const item = await getItemById(id);\n    if (!item) {\n      return json({ error: \"Item not found\" }, { status: 404 });\n    }\n\n    return json(item);\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Get item error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const { id } = params;\n    if (!id) {\n      return json({ error: \"Item ID is required\" }, { status: 400 });\n    }\n\n    if (request.method === \"PUT\") {\n      const body: CreateItemRequest = await request.json();\n      \n      const item = await updateItem(id, body);\n      if (!item) {\n        return json({ error: \"Item not found\" }, { status: 404 });\n      }\n\n      return json(item);\n\n    } else if (request.method === \"DELETE\") {\n      const success = await deleteItem(id);\n      if (!success) {\n        return json({ error: \"Item not found\" }, { status: 404 });\n      }\n\n      return new Response(null, { status: 204 });\n\n    } else {\n      return json({ error: \"Method not allowed\" }, { status: 405 });\n    }\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Item action error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getUserById, updateUser, deleteUser } from \"~/utils/db.server\";\nimport type { CreateUserRequest } from \"~/utils/types\";\n\nfunction requireAuth(request: Request) {\n  const authHeader = request.headers.get(\"Authorization\");\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    throw new Response(\"Unauthorized\", { status: 401 });\n  }\n  return authHeader.replace(\"Bearer \", \"\");\n}\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const { id } = params;\n    if (!id) {\n      return json({ error: \"User ID is required\" }, { status: 400 });\n    }\n\n    const user = await getUserById(id);\n    if (!user) {\n      return json({ error: \"User not found\" }, { status: 404 });\n    }\n\n    return json(user);\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"Get user error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n  try {\n    requireAuth(request);\n\n    const { id } = params;\n    if (!id) {\n      return json({ error: \"User ID is required\" }, { status: 400 });\n    }\n\n    if (request.method === \"PUT\") {\n      const body: CreateUserRequest = await request.json();\n      \n      const user = await updateUser(id, body);\n      if (!user) {\n        return json({ error: \"User not found\" }, { status: 404 });\n      }\n\n      return json(user);\n\n    } else if (request.method === \"DELETE\") {\n      const success = await deleteUser(id);\n      if (!success) {\n        return json({ error: \"User not found\" }, { status: 404 });\n      }\n\n      return new Response(null, { status: 204 });\n\n    } else {\n      return json({ error: \"Method not allowed\" }, { status: 405 });\n    }\n\n  } catch (error) {\n    if (error instanceof Response) {\n      return error;\n    }\n    console.error(\"User action error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { MetaFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { getUsers, getItems, getReservations, getReservationEvents } from \"~/utils/db.server\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Admin Dashboard - Toolshed\" },\n    { name: \"description\", content: \"Admin interface for managing community resources\" },\n  ];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const users = await getUsers(10, 0);\n  const items = await getItems(10, 0);\n  const reservations = await getReservations(10, 0);\n  const recentEvents = await getReservationEvents(10, 0);\n\n  const stats = {\n    totalUsers: users.length,\n    totalItems: items.length,\n    totalReservations: reservations.length,\n    activeReservations: reservations.filter(r => r.status === 'active').length,\n    pendingReservations: reservations.filter(r => r.status === 'pending').length,\n    availableItems: items.filter(i => i.quantity_available > 0).length,\n  };\n\n  return json({ users, items, reservations, recentEvents, stats });\n}\n\nexport default function AdminDashboard() {\n  const { users, items, reservations, recentEvents, stats } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"min-h-screen bg-neighborhood-cloud\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold text-neighborhood-slate mb-4\">\n            Admin Dashboard\n          </h1>\n          <p className=\"text-lg text-neighborhood-slate/80\">\n            Manage community resources and monitor platform activity\n          </p>\n        </div>\n\n        {/* Stats Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-neighborhood-slate mb-2\">Users</h3>\n            <p className=\"text-3xl font-bold text-neighborhood-spruce\">{stats.totalUsers}</p>\n            <p className=\"text-sm text-neighborhood-slate/60\">Total registered users</p>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-neighborhood-slate mb-2\">Items</h3>\n            <p className=\"text-3xl font-bold text-neighborhood-spruce\">{stats.totalItems}</p>\n            <p className=\"text-sm text-neighborhood-slate/60\">{stats.availableItems} available now</p>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-neighborhood-slate mb-2\">Reservations</h3>\n            <p className=\"text-3xl font-bold text-neighborhood-spruce\">{stats.totalReservations}</p>\n            <p className=\"text-sm text-neighborhood-slate/60\">{stats.activeReservations} active, {stats.pendingReservations} pending</p>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Recent Users */}\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-neighborhood-slate\">Recent Users</h2>\n              <Link \n                to=\"/admin/users\" \n                className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80 text-sm\"\n              >\n                View All \u2192\n              </Link>\n            </div>\n            <div className=\"space-y-3\">\n              {users.slice(0, 5).map((user) => (\n                <div key={user.id} className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium text-neighborhood-slate\">{user.name}</p>\n                    <p className=\"text-sm text-neighborhood-slate/60\">{user.email}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-sm text-neighborhood-slate/60\">{user.neighborhood}</p>\n                    <p className=\"text-xs text-neighborhood-slate/40\">\n                      {new Date(user.created_at).toLocaleDateString()}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Recent Items */}\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-neighborhood-slate\">Recent Items</h2>\n              <Link \n                to=\"/admin/items\" \n                className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80 text-sm\"\n              >\n                View All \u2192\n              </Link>\n            </div>\n            <div className=\"space-y-3\">\n              {items.slice(0, 5).map((item) => (\n                <div key={item.id} className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium text-neighborhood-slate\">{item.title}</p>\n                    <p className=\"text-sm text-neighborhood-slate/60\">{item.category}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className={`text-sm ${item.quantity_available > 0 ? 'text-green-600' : 'text-red-600'}`}>\n                      {item.quantity_available > 0 ? 'Available' : 'Reserved'}\n                    </p>\n                    <p className=\"text-xs text-neighborhood-slate/40\">{item.location}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Recent Reservations */}\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-neighborhood-slate\">Recent Reservations</h2>\n              <Link \n                to=\"/admin/reservations\" \n                className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80 text-sm\"\n              >\n                View All \u2192\n              </Link>\n            </div>\n            <div className=\"space-y-3\">\n              {reservations.slice(0, 5).map((reservation) => (\n                <div key={reservation.id} className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium text-neighborhood-slate\">Reservation #{reservation.id.slice(-8)}</p>\n                    <p className=\"text-sm text-neighborhood-slate/60\">Item: {reservation.item_id.slice(-8)}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      reservation.status === 'active' ? 'bg-green-100 text-green-800' :\n                      reservation.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                      reservation.status === 'approved' ? 'bg-blue-100 text-blue-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {reservation.status}\n                    </span>\n                    <p className=\"text-xs text-neighborhood-slate/40 mt-1\">\n                      {new Date(reservation.updated_at).toLocaleDateString()}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Recent Events */}\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-neighborhood-slate\">Recent Activity</h2>\n              <Link \n                to=\"/admin/events\" \n                className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80 text-sm\"\n              >\n                View All \u2192\n              </Link>\n            </div>\n            <div className=\"space-y-3\">\n              {recentEvents.slice(0, 5).map((event) => (\n                <div key={event.id} className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                  <div>\n                    <p className=\"font-medium text-neighborhood-slate capitalize\">\n                      {event.event_type.replace('_', ' ')}\n                    </p>\n                    <p className=\"text-sm text-neighborhood-slate/60\">\n                      Reservation #{event.reservation_id.slice(-8)}\n                    </p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-xs text-neighborhood-slate/40\">\n                      {new Date(event.timestamp).toLocaleString()}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Actions */}\n        <div className=\"mt-8 bg-white rounded-lg shadow-md p-6\">\n          <h2 className=\"text-xl font-semibold text-neighborhood-slate mb-4\">Quick Actions</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <Link \n              to=\"/admin/users\" \n              className=\"p-4 bg-neighborhood-spruce text-white rounded-lg hover:bg-neighborhood-spruce/90 transition-colors text-center\"\n            >\n              Manage Users\n            </Link>\n            <Link \n              to=\"/admin/items\" \n              className=\"p-4 bg-neighborhood-goldenrod text-white rounded-lg hover:bg-neighborhood-goldenrod/90 transition-colors text-center\"\n            >\n              Manage Items\n            </Link>\n            <Link \n              to=\"/admin/reservations\" \n              className=\"p-4 bg-neighborhood-mint text-neighborhood-slate rounded-lg hover:bg-neighborhood-mint/90 transition-colors text-center\"\n            >\n              View Reservations\n            </Link>\n            <Link \n              to=\"/admin/events\" \n              className=\"p-4 bg-neighborhood-rust text-white rounded-lg hover:bg-neighborhood-rust/90 transition-colors text-center\"\n            >\n              Activity Log\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import type { MetaFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { getItems, getUsers } from \"~/utils/db.server\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Item Management - Admin - Toolshed\" },\n    { name: \"description\", content: \"Manage platform items and tools\" },\n  ];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const items = await getItems(100, 0);\n  const users = await getUsers(100, 0);\n  \n  // Create a map of user IDs to user names for display\n  const userMap = new Map(users.map(user => [user.id, user.name]));\n  \n  return json({ items, userMap: Object.fromEntries(userMap) });\n}\n\nexport default function AdminItems() {\n  const { items, userMap } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"min-h-screen bg-neighborhood-cloud\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <Link \n              to=\"/admin\" \n              className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80\"\n            >\n              \u2190 Back to Dashboard\n            </Link>\n          </div>\n          <h1 className=\"text-4xl font-bold text-neighborhood-slate mb-4\">\n            Item Management\n          </h1>\n          <p className=\"text-lg text-neighborhood-slate/80\">\n            Review and manage all shared items and tools\n          </p>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold text-neighborhood-slate\">\n                All Items ({items.length})\n              </h2>\n              <div className=\"flex gap-2\">\n                <input \n                  type=\"search\" \n                  placeholder=\"Search items...\" \n                  className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-neighborhood-spruce focus:border-transparent\"\n                />\n                <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-neighborhood-spruce\">\n                  <option value=\"\">All Categories</option>\n                  <option value=\"power-tools\">Power Tools</option>\n                  <option value=\"hand-tools\">Hand Tools</option>\n                  <option value=\"garden\">Garden</option>\n                  <option value=\"automotive\">Automotive</option>\n                  <option value=\"home\">Home</option>\n                  <option value=\"specialty\">Specialty</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Item\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Owner\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Category\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Availability\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Location\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {items.map((item) => (\n                  <tr key={item.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">{item.title}</div>\n                        <div className=\"text-sm text-gray-500 max-w-xs truncate\">\n                          {item.description || \"No description\"}\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {userMap[item.owner_id] || \"Unknown User\"}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        ID: {item.owner_id.slice(-8)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-neighborhood-goldenrod text-white\">\n                        {item.category.replace('-', ' ')}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                        item.quantity_available > 0 \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-red-100 text-red-800'\n                      }`}>\n                        {item.quantity_available > 0 ? `${item.quantity_available} available` : 'Reserved'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {item.location}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <Link \n                        to={`/admin/items/${item.id}`}\n                        className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80 mr-4\"\n                      >\n                        View Details\n                      </Link>\n                      <button className=\"text-neighborhood-rust hover:text-neighborhood-rust/80\">\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Tags Cloud */}\n        <div className=\"mt-8 bg-white rounded-lg shadow-md p-6\">\n          <h3 className=\"text-lg font-semibold text-neighborhood-slate mb-4\">Popular Tags</h3>\n          <div className=\"flex flex-wrap gap-2\">\n            {Array.from(new Set(items.flatMap(item => item.tags))).slice(0, 20).map((tag) => (\n              <span \n                key={tag}\n                className=\"px-3 py-1 bg-neighborhood-mint/20 text-neighborhood-slate text-sm rounded-full\"\n              >\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import type { MetaFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { getUsers } from \"~/utils/db.server\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"User Management - Admin - Toolshed\" },\n    { name: \"description\", content: \"Manage platform users\" },\n  ];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const users = await getUsers(100, 0); // Get more users for admin view\n  return json({ users });\n}\n\nexport default function AdminUsers() {\n  const { users } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"min-h-screen bg-neighborhood-cloud\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <Link \n              to=\"/admin\" \n              className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80\"\n            >\n              \u2190 Back to Dashboard\n            </Link>\n          </div>\n          <h1 className=\"text-4xl font-bold text-neighborhood-slate mb-4\">\n            User Management\n          </h1>\n          <p className=\"text-lg text-neighborhood-slate/80\">\n            Review and manage all platform users\n          </p>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold text-neighborhood-slate\">\n                All Users ({users.length})\n              </h2>\n              <div className=\"flex gap-2\">\n                <input \n                  type=\"search\" \n                  placeholder=\"Search users...\" \n                  className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-neighborhood-spruce focus:border-transparent\"\n                />\n                <select className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-neighborhood-spruce\">\n                  <option value=\"\">All Neighborhoods</option>\n                  <option value=\"downtown\">Downtown</option>\n                  <option value=\"riverside\">Riverside</option>\n                  <option value=\"hillside\">Hillside</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    User\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Neighborhood\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contact Method\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Joined\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {users.map((user) => (\n                  <tr key={user.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">{user.name}</div>\n                        <div className=\"text-sm text-gray-500\">{user.email}</div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-neighborhood-mint text-neighborhood-slate\">\n                        {user.neighborhood}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {user.contact_method}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {new Date(user.created_at).toLocaleDateString()}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <Link \n                        to={`/admin/users/${user.id}`}\n                        className=\"text-neighborhood-spruce hover:text-neighborhood-spruce/80 mr-4\"\n                      >\n                        View Details\n                      </Link>\n                      <button className=\"text-neighborhood-rust hover:text-neighborhood-rust/80\">\n                        Suspend\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getHealthStatus } from \"~/utils/db.server\";\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  try {\n    const health = getHealthStatus();\n    return json(health);\n  } catch (error) {\n    console.error(\"Health check error:\", error);\n    return json({ \n      status: \"unhealthy\",\n      error: \"Internal server error\" \n    }, { status: 500 });\n  }\n}", "import type { MetaFunction } from \"@remix-run/node\";\nimport { useState } from \"react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"API Documentation - Toolshed\" },\n    { name: \"description\", content: \"Complete API documentation for developers\" },\n  ];\n};\n\nexport default function ApiDocs() {\n  const [selectedSection, setSelectedSection] = useState(\"overview\");\n\n  const sections = [\n    { id: \"overview\", title: \"Overview\" },\n    { id: \"authentication\", title: \"Authentication\" },\n    { id: \"users\", title: \"Users\" },\n    { id: \"items\", title: \"Items\" },\n    { id: \"reservations\", title: \"Reservations\" },\n    { id: \"events\", title: \"Event Sourcing\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-neighborhood-cloud\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold text-neighborhood-slate mb-4\">\n            API Documentation\n          </h1>\n          <p className=\"text-lg text-neighborhood-slate/80\">\n            Complete developer reference for the Toolshed API\n          </p>\n        </div>\n\n        <div className=\"flex gap-8\">\n          {/* Sidebar Navigation */}\n          <div className=\"w-64 bg-white rounded-lg shadow-md p-6\">\n            <nav className=\"space-y-2\">\n              {sections.map((section) => (\n                <button\n                  key={section.id}\n                  onClick={() => setSelectedSection(section.id)}\n                  className={`w-full text-left px-3 py-2 rounded-lg transition-colors ${\n                    selectedSection === section.id\n                      ? 'bg-neighborhood-spruce text-white'\n                      : 'text-neighborhood-slate hover:bg-gray-100'\n                  }`}\n                >\n                  {section.title}\n                </button>\n              ))}\n            </nav>\n          </div>\n\n          {/* Content Area */}\n          <div className=\"flex-1 bg-white rounded-lg shadow-md p-8\">\n            {selectedSection === \"overview\" && (\n              <div>\n                <h2 className=\"text-2xl font-bold text-neighborhood-slate mb-4\">API Overview</h2>\n                <div className=\"prose max-w-none\">\n                  <p className=\"text-neighborhood-slate/80 mb-6\">\n                    The Toolshed API provides three different ways to interact with the platform:\n                  </p>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                    <div className=\"border border-gray-200 rounded-lg p-4\">\n                      <h3 className=\"text-lg font-semibold text-neighborhood-spruce mb-2\">\n                        1. User Interface\n                      </h3>\n                      <p className=\"text-sm text-neighborhood-slate/70\">\n                        Web-based interface for community members to browse, share, and request items.\n                      </p>\n                      <div className=\"mt-3\">\n                        <span className=\"text-xs bg-neighborhood-mint px-2 py-1 rounded\">\n                          /browse, /share, /profile\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"border border-gray-200 rounded-lg p-4\">\n                      <h3 className=\"text-lg font-semibold text-neighborhood-goldenrod mb-2\">\n                        2. Admin Dashboard\n                      </h3>\n                      <p className=\"text-sm text-neighborhood-slate/70\">\n                        Administrative interface for reviewing data, managing users, and monitoring activity.\n                      </p>\n                      <div className=\"mt-3\">\n                        <span className=\"text-xs bg-neighborhood-goldenrod text-white px-2 py-1 rounded\">\n                          /admin/*\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"border border-gray-200 rounded-lg p-4\">\n                      <h3 className=\"text-lg font-semibold text-neighborhood-rust mb-2\">\n                        3. JSON API\n                      </h3>\n                      <p className=\"text-sm text-neighborhood-slate/70\">\n                        RESTful API endpoints for developers to integrate with external applications.\n                      </p>\n                      <div className=\"mt-3\">\n                        <span className=\"text-xs bg-neighborhood-rust text-white px-2 py-1 rounded\">\n                          /api/*\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <h3 className=\"text-xl font-semibold text-neighborhood-slate mb-3\">Event-Sourced Architecture</h3>\n                  <p className=\"text-neighborhood-slate/80 mb-4\">\n                    The reservation system uses event sourcing where the current state is computed from an immutable log of events. \n                    This provides complete audit trails and enables complex business logic with full history tracking.\n                  </p>\n\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold mb-2\">Base URL</h4>\n                    <code className=\"text-sm bg-gray-200 px-2 py-1 rounded\">\n                      https://your-domain.com/api\n                    </code>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {selectedSection === \"authentication\" && (\n              <div>\n                <h2 className=\"text-2xl font-bold text-neighborhood-slate mb-4\">Authentication</h2>\n                \n                <div className=\"mb-6\">\n                  <h3 className=\"text-lg font-semibold mb-3\">Login</h3>\n                  <div className=\"bg-gray-50 p-4 rounded-lg mb-4\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded text-sm font-mono\">\n                        POST\n                      </span>\n                      <code>/api/auth/login</code>\n                    </div>\n                    <p className=\"text-sm text-neighborhood-slate/70 mb-3\">\n                      Authenticate with email and password to receive a JWT token.\n                    </p>\n                    \n                    <div className=\"mb-4\">\n                      <h4 className=\"font-semibold mb-2\">Request Body:</h4>\n                      <pre className=\"bg-gray-800 text-green-400 p-3 rounded text-sm overflow-x-auto\">\n{JSON.stringify({\n  email: \"alice@neighborhood.local\",\n  password: \"your_password\"\n}, null, 2)}\n                      </pre>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Response:</h4>\n                      <pre className=\"bg-gray-800 text-green-400 p-3 rounded text-sm overflow-x-auto\">\n{JSON.stringify({\n  token: \"mock-jwt-token-550e8400-e29b-41d4-a716-446655440001\"\n}, null, 2)}\n                      </pre>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mb-6\">\n                  <h3 className=\"text-lg font-semibold mb-3\">Using the Token</h3>\n                  <p className=\"text-neighborhood-slate/80 mb-3\">\n                    Include the JWT token in the Authorization header for all API requests:\n                  </p>\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\n                    <code className=\"text-sm\">\n                      Authorization: Bearer your-jwt-token-here\n                    </code>\n                  </div>\n                </div>\n\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-yellow-800 mb-2\">Development Note</h4>\n                  <p className=\"text-yellow-700 text-sm\">\n                    This implementation uses mock JWT tokens for demonstration. In production, \n                    implement proper JWT signing, validation, and expiration handling.\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {selectedSection === \"items\" && (\n              <div>\n                <h2 className=\"text-2xl font-bold text-neighborhood-slate mb-4\">Items API</h2>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-center gap-2 mb-3\">\n                      <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm font-mono\">\n                        GET\n                      </span>\n                      <code>/api/items</code>\n                    </div>\n                    <p className=\"text-neighborhood-slate/70 mb-3\">Get all items with optional pagination.</p>\n                    \n                    <h4 className=\"font-semibold mb-2\">Query Parameters:</h4>\n                    <ul className=\"text-sm text-neighborhood-slate/70 mb-3 space-y-1\">\n                      <li><code>limit</code> - Maximum number of items (default: 50)</li>\n                      <li><code>offset</code> - Number of items to skip (default: 0)</li>\n                    </ul>\n                    \n                    <h4 className=\"font-semibold mb-2\">Example Response:</h4>\n                    <pre className=\"bg-gray-800 text-green-400 p-3 rounded text-sm overflow-x-auto\">\n{JSON.stringify([\n  {\n    id: \"650e8400-e29b-41d4-a716-446655440001\",\n    owner_id: \"550e8400-e29b-41d4-a716-446655440001\",\n    title: \"Electric Drill\",\n    description: \"High-quality cordless drill with multiple bits\",\n    category: \"power-tools\",\n    tags: [\"drilling\", \"construction\", \"DIY\"],\n    location: \"Downtown\",\n    photo_path: null,\n    quantity_total: 1,\n    quantity_available: 1,\n    created_at: \"2024-01-15T00:00:00.000Z\"\n  }\n], null, 2)}\n                    </pre>\n                  </div>\n\n                  <div className=\"border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-center gap-2 mb-3\">\n                      <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded text-sm font-mono\">\n                        POST\n                      </span>\n                      <code>/api/items</code>\n                    </div>\n                    <p className=\"text-neighborhood-slate/70 mb-3\">Create a new item.</p>\n                    \n                    <h4 className=\"font-semibold mb-2\">Request Body:</h4>\n                    <pre className=\"bg-gray-800 text-green-400 p-3 rounded text-sm overflow-x-auto\">\n{JSON.stringify({\n  owner_id: \"550e8400-e29b-41d4-a716-446655440001\",\n  title: \"Circular Saw\",\n  description: \"Professional grade circular saw with laser guide\",\n  category: \"power-tools\",\n  tags: [\"cutting\", \"woodworking\", \"construction\"],\n  location: \"Downtown\",\n  quantity_total: 1\n}, null, 2)}\n                    </pre>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {selectedSection === \"reservations\" && (\n              <div>\n                <h2 className=\"text-2xl font-bold text-neighborhood-slate mb-4\">Reservations API</h2>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-center gap-2 mb-3\">\n                      <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm font-mono\">\n                        GET\n                      </span>\n                      <code>/api/reservations</code>\n                    </div>\n                    <p className=\"text-neighborhood-slate/70 mb-3\">Get current reservation states with filtering options.</p>\n                    \n                    <h4 className=\"font-semibold mb-2\">Query Parameters:</h4>\n                    <ul className=\"text-sm text-neighborhood-slate/70 mb-3 space-y-1\">\n                      <li><code>item_id</code> - Filter by item ID</li>\n                      <li><code>requester_id</code> - Filter by requester ID</li>\n                      <li><code>status</code> - Filter by status (pending, approved, active, returned, cancelled)</li>\n                    </ul>\n                  </div>\n\n                  <div className=\"border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-center gap-2 mb-3\">\n                      <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm font-mono\">\n                        GET\n                      </span>\n                      <code>/api/reservations/[id]</code>\n                    </div>\n                    <p className=\"text-neighborhood-slate/70 mb-3\">Get a specific reservation's current state.</p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {selectedSection === \"events\" && (\n              <div>\n                <h2 className=\"text-2xl font-bold text-neighborhood-slate mb-4\">Event Sourcing</h2>\n                \n                <div className=\"mb-6\">\n                  <p className=\"text-neighborhood-slate/80 mb-4\">\n                    The reservation system uses event sourcing where each reservation's state is computed \n                    from an immutable log of events. This provides complete audit trails and enables \n                    complex business logic.\n                  </p>\n\n                  <h3 className=\"text-lg font-semibold mb-3\">Event Types</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full border border-gray-200\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th className=\"px-4 py-2 text-left\">Event Type</th>\n                          <th className=\"px-4 py-2 text-left\">Description</th>\n                          <th className=\"px-4 py-2 text-left\">Valid From States</th>\n                          <th className=\"px-4 py-2 text-left\">Resulting State</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"divide-y divide-gray-200\">\n                        <tr>\n                          <td className=\"px-4 py-2 font-mono text-sm\">requested</td>\n                          <td className=\"px-4 py-2\">Initial reservation request</td>\n                          <td className=\"px-4 py-2\">-</td>\n                          <td className=\"px-4 py-2\">pending</td>\n                        </tr>\n                        <tr>\n                          <td className=\"px-4 py-2 font-mono text-sm\">approved</td>\n                          <td className=\"px-4 py-2\">Owner approves reservation</td>\n                          <td className=\"px-4 py-2\">pending</td>\n                          <td className=\"px-4 py-2\">approved</td>\n                        </tr>\n                        <tr>\n                          <td className=\"px-4 py-2 font-mono text-sm\">activated</td>\n                          <td className=\"px-4 py-2\">Item picked up by requester</td>\n                          <td className=\"px-4 py-2\">approved</td>\n                          <td className=\"px-4 py-2\">active</td>\n                        </tr>\n                        <tr>\n                          <td className=\"px-4 py-2 font-mono text-sm\">returned</td>\n                          <td className=\"px-4 py-2\">Item returned by requester</td>\n                          <td className=\"px-4 py-2\">active</td>\n                          <td className=\"px-4 py-2\">returned</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n\n                <div className=\"border border-gray-200 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded text-sm font-mono\">\n                      POST\n                    </span>\n                    <code>/api/reservations/events</code>\n                  </div>\n                  <p className=\"text-neighborhood-slate/70 mb-3\">Add a new event to the reservation log.</p>\n                  \n                  <h4 className=\"font-semibold mb-2\">Example: Create New Reservation</h4>\n                  <pre className=\"bg-gray-800 text-green-400 p-3 rounded text-sm overflow-x-auto\">\n{JSON.stringify({\n  item_id: \"650e8400-e29b-41d4-a716-446655440001\",\n  event_type: \"requested\",\n  quantity: 1,\n  start_date: \"2024-06-10T09:00:00Z\",\n  end_date: \"2024-06-12T17:00:00Z\",\n  notes: \"Need for home renovation project\"\n}, null, 2)}\n                  </pre>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"mt-8 bg-white rounded-lg shadow-md p-6\">\n          <h2 className=\"text-xl font-semibold text-neighborhood-slate mb-4\">API Examples</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"border border-gray-200 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-2\">Authentication</h3>\n              <p className=\"text-xs text-neighborhood-slate/70\">\n                POST /api/auth/login with email and password to get JWT token\n              </p>\n            </div>\n            <div className=\"border border-gray-200 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-2\">Get Items</h3>\n              <p className=\"text-xs text-neighborhood-slate/70\">\n                GET /api/items with Authorization header to retrieve all items\n              </p>\n            </div>\n            <div className=\"border border-gray-200 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-2\">Create Reservation</h3>\n              <p className=\"text-xs text-neighborhood-slate/70\">\n                POST /api/reservations/events to create new reservation events\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import { Form, Link, useActionData, useNavigation } from \"@remix-run/react\";\nimport { json, redirect, type ActionFunctionArgs, type MetaFunction } from \"@remix-run/node\";\nimport { createUser } from \"~/utils/db.server\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Join Community - Toolshed\" }];\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const name = formData.get(\"name\")?.toString();\n  const email = formData.get(\"email\")?.toString();\n  const password = formData.get(\"password\")?.toString();\n  const confirmPassword = formData.get(\"confirmPassword\")?.toString();\n  const neighborhood = formData.get(\"neighborhood\")?.toString();\n  const contactMethod = formData.get(\"contactMethod\")?.toString();\n\n  if (!name || !email || !password || !confirmPassword) {\n    return json({ error: \"All fields are required\" }, { status: 400 });\n  }\n\n  if (password !== confirmPassword) {\n    return json({ error: \"Passwords do not match\" }, { status: 400 });\n  }\n\n  if (password.length < 6) {\n    return json({ error: \"Password must be at least 6 characters long\" }, { status: 400 });\n  }\n\n  try {\n    const user = await createUser({\n      name,\n      email,\n      password,\n      neighborhood: neighborhood || '',\n      contact_method: contactMethod || 'message'\n    });\n\n    return redirect(`/profile?welcome=true&new=true`);\n\n  } catch (error: any) {\n    if (error.message?.includes('unique constraint') || error.message?.includes('already exists')) {\n      return json({ error: \"An account with this email already exists\" }, { status: 400 });\n    }\n    console.error(\"Registration error:\", error);\n    return json({ error: \"Something went wrong. Please try again.\" }, { status: 500 });\n  }\n}\n\nexport default function Register() {\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n\n  return (\n    <div className=\"min-h-screen bg-neighborhood-cloud flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h1 className=\"text-center text-3xl font-bold text-neighborhood-slate\">\n            Join the Community\n          </h1>\n          <p className=\"mt-2 text-center text-sm text-neighborhood-slate/70\">\n            Start sharing tools with your neighbors\n          </p>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-md p-8\">\n          <Form method=\"post\" className=\"space-y-6\">\n            {actionData?.error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n                <p className=\"text-red-600 text-sm\">{actionData.error}</p>\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Full Name\n              </label>\n              <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                autoComplete=\"name\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                placeholder=\"Enter your full name\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"neighborhood\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Neighborhood\n              </label>\n              <input\n                id=\"neighborhood\"\n                name=\"neighborhood\"\n                type=\"text\"\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                placeholder=\"e.g. Downtown, Riverside\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"contactMethod\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Preferred Contact Method\n              </label>\n              <select\n                id=\"contactMethod\"\n                name=\"contactMethod\"\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n              >\n                <option value=\"message\">In-app messaging</option>\n                <option value=\"email\">Email</option>\n                <option value=\"phone\">Phone</option>\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                placeholder=\"Create a password\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Confirm Password\n              </label>\n              <input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                placeholder=\"Confirm your password\"\n              />\n            </div>\n\n            <div className=\"flex items-center\">\n              <input\n                id=\"agree-terms\"\n                name=\"agree-terms\"\n                type=\"checkbox\"\n                required\n                className=\"h-4 w-4 text-neighborhood-goldenrod focus:ring-neighborhood-goldenrod border-gray-300 rounded\"\n              />\n              <label htmlFor=\"agree-terms\" className=\"ml-2 block text-sm text-neighborhood-slate\">\n                I agree to the{\" \"}\n                <Link to=\"/terms\" className=\"text-neighborhood-goldenrod hover:text-neighborhood-goldenrod/80\">\n                  Terms of Service\n                </Link>{\" \"}\n                and{\" \"}\n                <Link to=\"/privacy\" className=\"text-neighborhood-goldenrod hover:text-neighborhood-goldenrod/80\">\n                  Privacy Policy\n                </Link>\n              </label>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-neighborhood-goldenrod hover:bg-neighborhood-goldenrod/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neighborhood-goldenrod disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? \"Creating account...\" : \"Create account\"}\n              </button>\n            </div>\n          </Form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white text-neighborhood-slate/70\">Already have an account?</span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <Link\n                to=\"/login\"\n                className=\"w-full flex justify-center py-2 px-4 border border-neighborhood-slate rounded-md shadow-sm text-sm font-medium text-neighborhood-slate bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neighborhood-goldenrod\"\n              >\n                Sign in instead\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import type { MetaFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Tool Details - Toolshed\" },\n    { name: \"description\", content: \"View tool details and contact the owner\" },\n  ];\n};\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n  const toolId = params.id;\n  \n  if (!toolId) {\n    throw new Response(\"Tool not found\", { status: 404 });\n  }\n\n  // TODO: Fetch tool data from database when schema is integrated\n  // For now, return placeholder response\n  return json({ toolId });\n}\n\nexport default function ToolDetail() {\n  const { toolId } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n        {/* Tool not found state */}\n        <div className=\"text-center py-12 px-6\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.386 0-4.735.832-6.565 2.436l-.693-.693A8.963 8.963 0 0112 13.5c2.213 0 4.337.815 5.985 2.29l-.692.692z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Tool not found</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Tool with ID \"{toolId}\" could not be found. This feature will be available once the database schema is integrated.\n          </p>\n          <div className=\"mt-6\">\n            <a\n              href=\"/browse\"\n              className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n              </svg>\n              Back to Browse\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { useState } from \"react\";\nimport { Form, Link, useLoaderData, useActionData, useNavigation, useSearchParams } from \"@remix-run/react\";\nimport { json, type LoaderFunctionArgs, type ActionFunctionArgs, type MetaFunction } from \"@remix-run/node\";\nimport { getUserByEmail, updateUser, getItems } from \"~/utils/db.server\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Profile - Toolshed\" }];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  // In a real app, this would get the user from session\n  // For demo, we'll use the sample user\n  const user = await getUserByEmail(\"alice@neighborhood.local\");\n  \n  if (!user) {\n    throw new Response(\"User not found\", { status: 404 });\n  }\n\n  // Get user's items\n  const allItems = await getItems();\n  const userItems = allItems.filter(item => item.ownerId === user.id);\n\n  return json({ user, userItems });\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n\n  if (intent === \"updateProfile\") {\n    const name = formData.get(\"name\")?.toString();\n    const neighborhood = formData.get(\"neighborhood\")?.toString();\n    const contactMethod = formData.get(\"contactMethod\")?.toString();\n\n    if (!name) {\n      return json({ error: \"Name is required\" }, { status: 400 });\n    }\n\n    try {\n      // In a real app, get user ID from session\n      const user = await getUserByEmail(\"alice@neighborhood.local\");\n      if (!user) {\n        return json({ error: \"User not found\" }, { status: 404 });\n      }\n\n      await updateUser(user.id, {\n        name,\n        neighborhood: neighborhood || '',\n        contact_method: contactMethod || 'message'\n      });\n\n      return json({ success: \"Profile updated successfully\" });\n    } catch (error) {\n      console.error(\"Profile update error:\", error);\n      return json({ error: \"Failed to update profile\" }, { status: 500 });\n    }\n  }\n\n  return json({ error: \"Invalid action\" }, { status: 400 });\n}\n\nexport default function Profile() {\n  const { user, userItems } = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation();\n  const [searchParams] = useSearchParams();\n  const [isEditing, setIsEditing] = useState(false);\n  \n  const isUpdating = navigation.state === \"submitting\" && navigation.formData?.get(\"intent\") === \"updateProfile\";\n  const isWelcome = searchParams.get(\"welcome\") === \"true\";\n  const isNewUser = searchParams.get(\"new\") === \"true\";\n\n  return (\n    <div className=\"min-h-screen bg-neighborhood-cloud\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Welcome Message */}\n        {isWelcome && (\n          <div className=\"mb-8 bg-neighborhood-mint/10 border border-neighborhood-mint/20 rounded-lg p-6\">\n            <h2 className=\"text-xl font-semibold text-neighborhood-slate mb-2\">\n              {isNewUser ? \"Welcome to Toolshed!\" : \"Welcome back!\"}\n            </h2>\n            <p className=\"text-neighborhood-slate/70\">\n              {isNewUser \n                ? \"Your account has been created successfully. Start by browsing available tools or sharing your own.\"\n                : \"You're successfully signed in. Explore your neighborhood's shared resources.\"\n              }\n            </p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Profile Information */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h1 className=\"text-2xl font-bold text-neighborhood-slate\">My Profile</h1>\n                <button\n                  onClick={() => setIsEditing(!isEditing)}\n                  className=\"px-4 py-2 bg-neighborhood-goldenrod text-white rounded-lg hover:bg-neighborhood-goldenrod/90 transition-colors\"\n                >\n                  {isEditing ? \"Cancel\" : \"Edit Profile\"}\n                </button>\n              </div>\n\n              {actionData?.success && (\n                <div className=\"mb-6 bg-green-50 border border-green-200 rounded-md p-4\">\n                  <p className=\"text-green-600 text-sm\">{actionData.success}</p>\n                </div>\n              )}\n\n              {actionData?.error && (\n                <div className=\"mb-6 bg-red-50 border border-red-200 rounded-md p-4\">\n                  <p className=\"text-red-600 text-sm\">{actionData.error}</p>\n                </div>\n              )}\n\n              {isEditing ? (\n                <Form method=\"post\" className=\"space-y-6\">\n                  <input type=\"hidden\" name=\"intent\" value=\"updateProfile\" />\n                  \n                  <div>\n                    <label htmlFor=\"name\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                      Full Name\n                    </label>\n                    <input\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      defaultValue={user.name}\n                      required\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                      Email Address\n                    </label>\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={user.email}\n                      disabled\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm bg-gray-50 text-gray-500\"\n                    />\n                    <p className=\"text-xs text-neighborhood-slate/60 mt-1\">Email cannot be changed</p>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"neighborhood\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                      Neighborhood\n                    </label>\n                    <input\n                      id=\"neighborhood\"\n                      name=\"neighborhood\"\n                      type=\"text\"\n                      defaultValue={user.neighborhood}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactMethod\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                      Preferred Contact Method\n                    </label>\n                    <select\n                      id=\"contactMethod\"\n                      name=\"contactMethod\"\n                      defaultValue={user.contactMethod}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                    >\n                      <option value=\"message\">In-app messaging</option>\n                      <option value=\"email\">Email</option>\n                      <option value=\"phone\">Phone</option>\n                    </select>\n                  </div>\n\n                  <div className=\"flex gap-4\">\n                    <button\n                      type=\"submit\"\n                      disabled={isUpdating}\n                      className=\"px-6 py-2 bg-neighborhood-goldenrod text-white rounded-lg hover:bg-neighborhood-goldenrod/90 transition-colors disabled:opacity-50\"\n                    >\n                      {isUpdating ? \"Saving...\" : \"Save Changes\"}\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => setIsEditing(false)}\n                      className=\"px-6 py-2 bg-gray-200 text-neighborhood-slate rounded-lg hover:bg-gray-300 transition-colors\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </Form>\n              ) : (\n                <div className=\"space-y-4\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-neighborhood-slate/70\">Name</h3>\n                    <p className=\"text-lg text-neighborhood-slate\">{user.name}</p>\n                  </div>\n                  <div>\n                    <h3 className=\"text-sm font-medium text-neighborhood-slate/70\">Email</h3>\n                    <p className=\"text-lg text-neighborhood-slate\">{user.email}</p>\n                  </div>\n                  <div>\n                    <h3 className=\"text-sm font-medium text-neighborhood-slate/70\">Neighborhood</h3>\n                    <p className=\"text-lg text-neighborhood-slate\">{user.neighborhood || \"Not specified\"}</p>\n                  </div>\n                  <div>\n                    <h3 className=\"text-sm font-medium text-neighborhood-slate/70\">Contact Preference</h3>\n                    <p className=\"text-lg text-neighborhood-slate capitalize\">{user.contactMethod}</p>\n                  </div>\n                  <div>\n                    <h3 className=\"text-sm font-medium text-neighborhood-slate/70\">Member Since</h3>\n                    <p className=\"text-lg text-neighborhood-slate\">\n                      {new Date(user.createdAt).toLocaleDateString()}\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* My Items */}\n            <div className=\"mt-8 bg-white rounded-lg shadow-md p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-neighborhood-slate\">My Shared Items</h2>\n                <Link\n                  to=\"/share\"\n                  className=\"px-4 py-2 bg-neighborhood-mint text-neighborhood-slate rounded-lg hover:bg-neighborhood-mint/80 transition-colors\"\n                >\n                  Add New Item\n                </Link>\n              </div>\n\n              {userItems.length > 0 ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {userItems.map((item) => (\n                    <div key={item.id} className=\"border border-gray-200 rounded-lg p-4\">\n                      <h3 className=\"font-semibold text-neighborhood-slate\">{item.title}</h3>\n                      <p className=\"text-sm text-neighborhood-slate/70 mt-1\">{item.description}</p>\n                      <div className=\"flex items-center justify-between mt-3\">\n                        <span className=\"text-xs bg-neighborhood-mint/20 text-neighborhood-slate px-2 py-1 rounded\">\n                          {item.category}\n                        </span>\n                        <span className=\"text-xs text-neighborhood-slate/60\">\n                          Available: {item.quantityAvailable}/{item.quantityTotal}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <p className=\"text-neighborhood-slate/70 mb-4\">You haven't shared any items yet.</p>\n                  <Link\n                    to=\"/share\"\n                    className=\"inline-flex items-center px-4 py-2 bg-neighborhood-goldenrod text-white rounded-lg hover:bg-neighborhood-goldenrod/90 transition-colors\"\n                  >\n                    Share Your First Item\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Quick Actions */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold text-neighborhood-slate mb-4\">Quick Actions</h3>\n              <div className=\"space-y-3\">\n                <Link\n                  to=\"/browse\"\n                  className=\"block w-full px-4 py-3 bg-neighborhood-goldenrod text-white rounded-lg hover:bg-neighborhood-goldenrod/90 transition-colors text-center\"\n                >\n                  Browse Items\n                </Link>\n                <Link\n                  to=\"/share\"\n                  className=\"block w-full px-4 py-3 bg-neighborhood-mint text-neighborhood-slate rounded-lg hover:bg-neighborhood-mint/80 transition-colors text-center\"\n                >\n                  Share an Item\n                </Link>\n                <Link\n                  to=\"/reservations\"\n                  className=\"block w-full px-4 py-3 bg-white border border-neighborhood-slate text-neighborhood-slate rounded-lg hover:bg-gray-50 transition-colors text-center\"\n                >\n                  My Reservations\n                </Link>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold text-neighborhood-slate mb-4\">Community Stats</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-neighborhood-slate/70\">Items Shared</span>\n                  <span className=\"font-semibold text-neighborhood-slate\">{userItems.length}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-neighborhood-slate/70\">Trust Score</span>\n                  <span className=\"font-semibold text-neighborhood-goldenrod\">\u2605\u2605\u2605\u2605\u2606</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-neighborhood-slate/70\">Exchanges</span>\n                  <span className=\"font-semibold text-neighborhood-slate\">12</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold text-neighborhood-slate mb-4\">Account</h3>\n              <div className=\"space-y-3\">\n                <button className=\"block w-full px-4 py-2 text-left text-neighborhood-slate hover:bg-gray-50 rounded\">\n                  Notification Settings\n                </button>\n                <button className=\"block w-full px-4 py-2 text-left text-neighborhood-slate hover:bg-gray-50 rounded\">\n                  Privacy Settings\n                </button>\n                <Link\n                  to=\"/logout\"\n                  className=\"block w-full px-4 py-2 text-left text-red-600 hover:bg-red-50 rounded\"\n                >\n                  Sign Out\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import { Link } from \"@remix-run/react\";\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.8\" }}>\n      <div style={{ maxWidth: \"1200px\", margin: \"0 auto\", padding: \"2rem\" }}>\n        <header style={{ textAlign: \"center\", marginBottom: \"3rem\" }}>\n          <h1 style={{ fontSize: \"3rem\", color: \"#2d3748\", marginBottom: \"1rem\" }}>\n            Welcome to Toolshed\n          </h1>\n          <p style={{ fontSize: \"1.25rem\", color: \"#4a5568\", maxWidth: \"600px\", margin: \"0 auto\" }}>\n            Share tools, borrow equipment, and build stronger communities. \n            Connect with neighbors to share resources and reduce waste.\n          </p>\n        </header>\n\n        <div style={{ display: \"flex\", gap: \"1rem\", justifyContent: \"center\", marginBottom: \"3rem\" }}>\n          <Link \n            to=\"/browse\" \n            style={{\n              backgroundColor: \"#f6ad55\",\n              color: \"white\",\n              padding: \"0.75rem 1.5rem\",\n              borderRadius: \"0.5rem\",\n              textDecoration: \"none\",\n              fontWeight: \"600\"\n            }}\n          >\n            Browse Tools\n          </Link>\n          <Link \n            to=\"/register\"\n            style={{\n              backgroundColor: \"#4fd1c7\",\n              color: \"#2d3748\",\n              padding: \"0.75rem 1.5rem\",\n              borderRadius: \"0.5rem\",\n              textDecoration: \"none\",\n              fontWeight: \"600\"\n            }}\n          >\n            Join Community\n          </Link>\n        </div>\n\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\", gap: \"2rem\", marginBottom: \"3rem\" }}>\n          <div style={{ backgroundColor: \"white\", padding: \"2rem\", borderRadius: \"0.5rem\", boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\" }}>\n            <h3 style={{ fontSize: \"1.25rem\", fontWeight: \"600\", color: \"#2d3748\", marginBottom: \"1rem\" }}>\n              Share Your Tools\n            </h3>\n            <p style={{ color: \"#4a5568\", marginBottom: \"1rem\" }}>\n              List tools you're willing to lend to neighbors. From power drills to garden equipment, help your community access what they need.\n            </p>\n            <Link to=\"/share\" style={{ color: \"#f6ad55\", textDecoration: \"none\", fontWeight: \"600\" }}>\n              Start Sharing \u2192\n            </Link>\n          </div>\n\n          <div style={{ backgroundColor: \"white\", padding: \"2rem\", borderRadius: \"0.5rem\", boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\" }}>\n            <h3 style={{ fontSize: \"1.25rem\", fontWeight: \"600\", color: \"#2d3748\", marginBottom: \"1rem\" }}>\n              Find What You Need\n            </h3>\n            <p style={{ color: \"#4a5568\", marginBottom: \"1rem\" }}>\n              Browse available tools in your neighborhood. Save money and reduce waste by borrowing instead of buying.\n            </p>\n            <Link to=\"/browse\" style={{ color: \"#f6ad55\", textDecoration: \"none\", fontWeight: \"600\" }}>\n              Browse Tools \u2192\n            </Link>\n          </div>\n\n          <div style={{ backgroundColor: \"white\", padding: \"2rem\", borderRadius: \"0.5rem\", boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\" }}>\n            <h3 style={{ fontSize: \"1.25rem\", fontWeight: \"600\", color: \"#2d3748\", marginBottom: \"1rem\" }}>\n              Build Community\n            </h3>\n            <p style={{ color: \"#4a5568\", marginBottom: \"1rem\" }}>\n              Connect with neighbors, build trust, and create a stronger, more sustainable community together.\n            </p>\n            <Link to=\"/login\" style={{ color: \"#f6ad55\", textDecoration: \"none\", fontWeight: \"600\" }}>\n              Get Started \u2192\n            </Link>\n          </div>\n        </div>\n\n        <div style={{ textAlign: \"center\", backgroundColor: \"#f7fafc\", padding: \"2rem\", borderRadius: \"0.5rem\" }}>\n          <h2 style={{ fontSize: \"1.5rem\", color: \"#2d3748\", marginBottom: \"1rem\" }}>\n            Ready to get started?\n          </h2>\n          <p style={{ color: \"#4a5568\", marginBottom: \"1.5rem\" }}>\n            Join our community and start sharing resources with your neighbors today.\n          </p>\n          <div style={{ display: \"flex\", gap: \"1rem\", justifyContent: \"center\" }}>\n            <Link \n              to=\"/register\"\n              style={{\n                backgroundColor: \"#f6ad55\",\n                color: \"white\",\n                padding: \"0.75rem 1.5rem\",\n                borderRadius: \"0.5rem\",\n                textDecoration: \"none\",\n                fontWeight: \"600\"\n              }}\n            >\n              Create Account\n            </Link>\n            <Link \n              to=\"/login\"\n              style={{\n                backgroundColor: \"white\",\n                color: \"#2d3748\",\n                padding: \"0.75rem 1.5rem\",\n                borderRadius: \"0.5rem\",\n                textDecoration: \"none\",\n                fontWeight: \"600\",\n                border: \"1px solid #e2e8f0\"\n              }}\n            >\n              Sign In\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import type { MetaFunction } from \"@remix-run/node\";\nimport { useState } from \"react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Browse Tools - Toolshed\" },\n    { name: \"description\", content: \"Browse available tools and resources in your community\" },\n  ];\n};\n\nexport default function Browse() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  const categories = [\n    { id: \"all\", name: \"All Categories\" },\n    { id: \"power-tools\", name: \"Power Tools\" },\n    { id: \"hand-tools\", name: \"Hand Tools\" },\n    { id: \"garden\", name: \"Garden & Outdoor\" },\n    { id: \"automotive\", name: \"Automotive\" },\n    { id: \"home\", name: \"Home & DIY\" },\n    { id: \"specialty\", name: \"Specialty Tools\" },\n  ];\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-neighborhood-slate mb-4\">Browse Tools</h1>\n        <p className=\"text-lg text-neighborhood-slate\">\n          Discover tools and resources available in your community\n        </p>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"bg-white rounded-lg shadow-sm border border-neighborhood-mint/20 p-6 mb-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"search\" className=\"block text-sm font-medium text-neighborhood-slate mb-2\">\n              Search Tools\n            </label>\n            <div className=\"relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <svg className=\"h-5 w-5 text-neighborhood-slate\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n              </div>\n              <input\n                type=\"text\"\n                id=\"search\"\n                className=\"block w-full pl-10 pr-3 py-2 border border-neighborhood-mint rounded-md leading-5 bg-white placeholder-neighborhood-disabled focus:outline-none focus:placeholder-neighborhood-slate focus:ring-1 focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                placeholder=\"Search for tools...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          \n          <div>\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-neighborhood-slate mb-2\">\n              Category\n            </label>\n            <select\n              id=\"category\"\n              className=\"block w-full px-3 py-2 border border-neighborhood-mint rounded-md leading-5 bg-white focus:outline-none focus:ring-1 focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n              value={selectedCategory}\n              onChange={(e) => setSelectedCategory(e.target.value)}\n            >\n              {categories.map((category) => (\n                <option key={category.id} value={category.id}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Empty State */}\n      <div className=\"text-center py-12\">\n        <svg\n          className=\"mx-auto h-12 w-12 text-gray-400\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n          />\n        </svg>\n        <h3 className=\"mt-2 text-sm font-medium text-neighborhood-slate\">No tools available</h3>\n        <p className=\"mt-1 text-sm text-neighborhood-slate\">\n          Tools will appear here once they are shared by community members.\n        </p>\n        <div className=\"mt-6\">\n          <a\n            href=\"/share\"\n            className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-neighborhood-goldenrod hover:bg-neighborhood-hover focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neighborhood-goldenrod\"\n          >\n            <svg className=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n            </svg>\n            Share a Tool\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { redirect, type LoaderFunctionArgs } from \"@remix-run/node\";\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  // In a real app, this would clear the session\n  // For demo, just redirect to home\n  return redirect(\"/?logout=true\");\n}\n\nexport default function Logout() {\n  // This component won't render since we always redirect\n  return null;\n}", "import { useState } from \"react\";\nimport { Form, Link, useActionData, useNavigation } from \"@remix-run/react\";\nimport { json, redirect, type ActionFunctionArgs, type MetaFunction } from \"@remix-run/node\";\nimport { authenticateUser } from \"~/utils/db.server\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Sign In - Toolshed\" }];\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\")?.toString();\n  const password = formData.get(\"password\")?.toString();\n\n  if (!email || !password) {\n    return json({ error: \"Email and password are required\" }, { status: 400 });\n  }\n\n  try {\n    const user = await authenticateUser(email, password);\n    \n    if (!user) {\n      return json({ error: \"Invalid email or password\" }, { status: 401 });\n    }\n\n    // In a real app, you'd set a session cookie here\n    // For now, redirect to profile with success\n    return redirect(`/profile?welcome=true`);\n\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    return json({ error: \"Something went wrong. Please try again.\" }, { status: 500 });\n  }\n}\n\nexport default function Login() {\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n\n  return (\n    <div className=\"min-h-screen bg-neighborhood-cloud flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h1 className=\"text-center text-3xl font-bold text-neighborhood-slate\">\n            Sign in to Toolshed\n          </h1>\n          <p className=\"mt-2 text-center text-sm text-neighborhood-slate/70\">\n            Welcome back to your community\n          </p>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-md p-8\">\n          <Form method=\"post\" className=\"space-y-6\">\n            {actionData?.error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n                <p className=\"text-red-600 text-sm\">{actionData.error}</p>\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-neighborhood-slate\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n                placeholder=\"Enter your password\"\n              />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-neighborhood-goldenrod focus:ring-neighborhood-goldenrod border-gray-300 rounded\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-neighborhood-slate\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <Link to=\"/forgot-password\" className=\"font-medium text-neighborhood-goldenrod hover:text-neighborhood-goldenrod/80\">\n                  Forgot your password?\n                </Link>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-neighborhood-goldenrod hover:bg-neighborhood-goldenrod/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neighborhood-goldenrod disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? \"Signing in...\" : \"Sign in\"}\n              </button>\n            </div>\n          </Form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white text-neighborhood-slate/70\">New to Toolshed?</span>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <Link\n                to=\"/register\"\n                className=\"w-full flex justify-center py-2 px-4 border border-neighborhood-slate rounded-md shadow-sm text-sm font-medium text-neighborhood-slate bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neighborhood-goldenrod\"\n              >\n                Create an account\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-xs text-neighborhood-slate/60\">\n              Demo account: alice@neighborhood.local / password123\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import type { MetaFunction, ActionFunctionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Share a Tool - Toolshed\" },\n    { name: \"description\", content: \"Share your tools and resources with the community\" },\n  ];\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  \n  // Basic form validation\n  const title = formData.get(\"title\");\n  const description = formData.get(\"description\");\n  const category = formData.get(\"category\");\n  \n  const errors: Record<string, string> = {};\n  \n  if (!title || typeof title !== \"string\" || title.trim().length === 0) {\n    errors.title = \"Tool name is required\";\n  }\n  \n  if (!description || typeof description !== \"string\" || description.trim().length === 0) {\n    errors.description = \"Description is required\";\n  }\n  \n  if (!category || typeof category !== \"string\" || category === \"\") {\n    errors.category = \"Category is required\";\n  }\n  \n  if (Object.keys(errors).length > 0) {\n    return json({ errors, success: false }, { status: 400 });\n  }\n  \n  // TODO: Save to database when schema is integrated\n  console.log(\"Tool sharing data:\", {\n    title,\n    description,\n    category,\n    condition: formData.get(\"condition\"),\n    availability: formData.get(\"availability\"),\n    location: formData.get(\"location\"),\n    contactMethod: formData.get(\"contactMethod\"),\n  });\n  \n  // For now, redirect to browse page\n  return redirect(\"/browse?shared=true\");\n}\n\nexport default function Share() {\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n  const categories = [\n    { id: \"\", name: \"Select a category\" },\n    { id: \"power-tools\", name: \"Power Tools\" },\n    { id: \"hand-tools\", name: \"Hand Tools\" },\n    { id: \"garden\", name: \"Garden & Outdoor\" },\n    { id: \"automotive\", name: \"Automotive\" },\n    { id: \"home\", name: \"Home & DIY\" },\n    { id: \"specialty\", name: \"Specialty Tools\" },\n  ];\n\n  const conditions = [\n    { id: \"excellent\", name: \"Excellent\" },\n    { id: \"good\", name: \"Good\" },\n    { id: \"fair\", name: \"Fair\" },\n    { id: \"needs-repair\", name: \"Needs Repair\" },\n  ];\n\n  const availabilityOptions = [\n    { id: \"available\", name: \"Available Now\" },\n    { id: \"limited\", name: \"Limited Availability\" },\n    { id: \"weekends\", name: \"Weekends Only\" },\n    { id: \"by-appointment\", name: \"By Appointment\" },\n  ];\n\n  return (\n    <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-neighborhood-slate mb-4\">Share a Tool</h1>\n        <p className=\"text-lg text-neighborhood-slate\">\n          Add your tool to the community sharing network\n        </p>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-sm border border-neighborhood-mint/20 p-6\">\n        <Form method=\"post\" className=\"space-y-6\">\n          {/* Tool Name */}\n          <div>\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-neighborhood-slate mb-2\">\n              Tool Name *\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-1 ${\n                actionData?.errors?.title\n                  ? \"border-neighborhood-rust focus:ring-neighborhood-rust focus:border-neighborhood-rust\"\n                  : \"border-neighborhood-mint focus:ring-neighborhood-goldenrod focus:border-neighborhood-goldenrod\"\n              }`}\n              placeholder=\"e.g., Power Drill, Lawnmower, Socket Set\"\n            />\n            {actionData?.errors?.title && (\n              <p className=\"mt-1 text-sm text-neighborhood-rust\">{actionData.errors.title}</p>\n            )}\n          </div>\n\n          {/* Description */}\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Description *\n            </label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              rows={4}\n              className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-1 ${\n                actionData?.errors?.description\n                  ? \"border-red-300 focus:ring-red-500 focus:border-red-500\"\n                  : \"border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\n              }`}\n              placeholder=\"Describe the tool, its features, and any important details...\"\n            />\n            {actionData?.errors?.description && (\n              <p className=\"mt-1 text-sm text-red-600\">{actionData.errors.description}</p>\n            )}\n          </div>\n\n          {/* Category and Condition */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Category *\n              </label>\n              <select\n                id=\"category\"\n                name=\"category\"\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n                className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-1 ${\n                  actionData?.errors?.category\n                    ? \"border-red-300 focus:ring-red-500 focus:border-red-500\"\n                    : \"border-gray-300 focus:ring-blue-500 focus:border-blue-500\"\n                }`}\n              >\n                {categories.map((category) => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              {actionData?.errors?.category && (\n                <p className=\"mt-1 text-sm text-red-600\">{actionData.errors.category}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"condition\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Condition\n              </label>\n              <select\n                id=\"condition\"\n                name=\"condition\"\n                className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                {conditions.map((condition) => (\n                  <option key={condition.id} value={condition.id}>\n                    {condition.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Availability and Location */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"availability\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Availability\n              </label>\n              <select\n                id=\"availability\"\n                name=\"availability\"\n                className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                {availabilityOptions.map((option) => (\n                  <option key={option.id} value={option.id}>\n                    {option.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                General Location\n              </label>\n              <input\n                type=\"text\"\n                id=\"location\"\n                name=\"location\"\n                className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g., Downtown, West Side, ZIP code\"\n              />\n            </div>\n          </div>\n\n          {/* Contact Method */}\n          <div>\n            <label htmlFor=\"contactMethod\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Preferred Contact Method\n            </label>\n            <select\n              id=\"contactMethod\"\n              name=\"contactMethod\"\n              className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              <option value=\"message\">App Message</option>\n              <option value=\"email\">Email</option>\n              <option value=\"phone\">Phone</option>\n            </select>\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"pt-4\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-neighborhood-goldenrod hover:bg-neighborhood-hover focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neighborhood-goldenrod disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? \"Sharing Tool...\" : \"Share Tool\"}\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-TK4I6SIB.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-OJIVT72O.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-YP5XBNXY.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-XONX5ZQK.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-G7XMN5QS.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin._index':{'id':'routes/admin._index','parentId':'root','path':'admin','index':true,'caseSensitive':undefined,'module':'/build/routes/admin._index-FWOQBVIG.js','imports':['/build/_shared/chunk-KONDUBG3.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin.items':{'id':'routes/admin.items','parentId':'root','path':'admin/items','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.items-L4WQGEW7.js','imports':['/build/_shared/chunk-KONDUBG3.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin.reservations':{'id':'routes/admin.reservations','parentId':'root','path':'admin/reservations','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.reservations-KTL55TVY.js','imports':['/build/_shared/chunk-KONDUBG3.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin.users':{'id':'routes/admin.users','parentId':'root','path':'admin/users','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.users-ERJEZREU.js','imports':['/build/_shared/chunk-KONDUBG3.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api-docs':{'id':'routes/api-docs','parentId':'root','path':'api-docs','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api-docs-VM54SIOU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.auth.login':{'id':'routes/api.auth.login','parentId':'root','path':'api/auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.auth.login-6245K4LH.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.auth.logout':{'id':'routes/api.auth.logout','parentId':'root','path':'api/auth/logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.auth.logout-WCJWBYDB.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.health':{'id':'routes/api.health','parentId':'root','path':'api/health','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.health-67CCR6UT.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.items.$id':{'id':'routes/api.items.$id','parentId':'root','path':'api/items/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.items.$id-6J4GDWCE.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.items._index':{'id':'routes/api.items._index','parentId':'root','path':'api/items','index':true,'caseSensitive':undefined,'module':'/build/routes/api.items._index-VBYNWXIZ.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.reservations.$id':{'id':'routes/api.reservations.$id','parentId':'root','path':'api/reservations/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.reservations.$id-BIWLWCSO.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.reservations.$id.events':{'id':'routes/api.reservations.$id.events','parentId':'routes/api.reservations.$id','path':'events','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.reservations.$id.events-DGUN4OAS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.reservations._index':{'id':'routes/api.reservations._index','parentId':'root','path':'api/reservations','index':true,'caseSensitive':undefined,'module':'/build/routes/api.reservations._index-MTBUTTCX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.reservations.events':{'id':'routes/api.reservations.events','parentId':'root','path':'api/reservations/events','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.reservations.events-LORNGS5M.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.users.$id':{'id':'routes/api.users.$id','parentId':'root','path':'api/users/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.users.$id-KTAVK6JS.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.users._index':{'id':'routes/api.users._index','parentId':'root','path':'api/users','index':true,'caseSensitive':undefined,'module':'/build/routes/api.users._index-SHTHNUT6.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/browse':{'id':'routes/browse','parentId':'root','path':'browse','index':undefined,'caseSensitive':undefined,'module':'/build/routes/browse-FN4GGKMW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-W2P5FXXE.js','imports':['/build/_shared/chunk-KONDUBG3.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-4RC6W7AA.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/profile':{'id':'routes/profile','parentId':'root','path':'profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile-SZDBEUUY.js','imports':['/build/_shared/chunk-KONDUBG3.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/register':{'id':'routes/register','parentId':'root','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/register-WCTBIYP2.js','imports':['/build/_shared/chunk-KONDUBG3.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/share':{'id':'routes/share','parentId':'root','path':'share','index':undefined,'caseSensitive':undefined,'module':'/build/routes/share-JWDXL6UE.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/tool.$id':{'id':'routes/tool.$id','parentId':'root','path':'tool/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tool.$id-MIIMFKU6.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'5c58b395','hmr':{'runtime':'/build/_shared/chunk-YP5XBNXY.js','timestamp':1749404923228},'url':'/build/manifest-5C58B395.js'};", "\nimport * as entryServer from \"/home/runner/workspace/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/api.reservations.$id.events.tsx\";\nimport * as route2 from \"./routes/api.reservations._index.tsx\";\nimport * as route3 from \"./routes/api.reservations.events.tsx\";\nimport * as route4 from \"./routes/api.reservations.$id.tsx\";\nimport * as route5 from \"./routes/admin.reservations.tsx\";\nimport * as route6 from \"./routes/api.items._index.tsx\";\nimport * as route7 from \"./routes/api.users._index.tsx\";\nimport * as route8 from \"./routes/api.auth.logout.tsx\";\nimport * as route9 from \"./routes/api.auth.login.tsx\";\nimport * as route10 from \"./routes/api.items.$id.tsx\";\nimport * as route11 from \"./routes/api.users.$id.tsx\";\nimport * as route12 from \"./routes/admin._index.tsx\";\nimport * as route13 from \"./routes/admin.items.tsx\";\nimport * as route14 from \"./routes/admin.users.tsx\";\nimport * as route15 from \"./routes/api.health.tsx\";\nimport * as route16 from \"./routes/api-docs.tsx\";\nimport * as route17 from \"./routes/register.tsx\";\nimport * as route18 from \"./routes/tool.$id.tsx\";\nimport * as route19 from \"./routes/profile.tsx\";\nimport * as route20 from \"./routes/_index.tsx\";\nimport * as route21 from \"./routes/browse.tsx\";\nimport * as route22 from \"./routes/logout.tsx\";\nimport * as route23 from \"./routes/login.tsx\";\nimport * as route24 from \"./routes/share.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/api.reservations.$id.events\": {\n      id: \"routes/api.reservations.$id.events\",\n      parentId: \"routes/api.reservations.$id\",\n      path: \"events\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/api.reservations._index\": {\n      id: \"routes/api.reservations._index\",\n      parentId: \"root\",\n      path: \"api/reservations\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/api.reservations.events\": {\n      id: \"routes/api.reservations.events\",\n      parentId: \"root\",\n      path: \"api/reservations/events\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/api.reservations.$id\": {\n      id: \"routes/api.reservations.$id\",\n      parentId: \"root\",\n      path: \"api/reservations/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/admin.reservations\": {\n      id: \"routes/admin.reservations\",\n      parentId: \"root\",\n      path: \"admin/reservations\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/api.items._index\": {\n      id: \"routes/api.items._index\",\n      parentId: \"root\",\n      path: \"api/items\",\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/api.users._index\": {\n      id: \"routes/api.users._index\",\n      parentId: \"root\",\n      path: \"api/users\",\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/api.auth.logout\": {\n      id: \"routes/api.auth.logout\",\n      parentId: \"root\",\n      path: \"api/auth/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/api.auth.login\": {\n      id: \"routes/api.auth.login\",\n      parentId: \"root\",\n      path: \"api/auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/api.items.$id\": {\n      id: \"routes/api.items.$id\",\n      parentId: \"root\",\n      path: \"api/items/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/api.users.$id\": {\n      id: \"routes/api.users.$id\",\n      parentId: \"root\",\n      path: \"api/users/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/admin._index\": {\n      id: \"routes/admin._index\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/admin.items\": {\n      id: \"routes/admin.items\",\n      parentId: \"root\",\n      path: \"admin/items\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/admin.users\": {\n      id: \"routes/admin.users\",\n      parentId: \"root\",\n      path: \"admin/users\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/api.health\": {\n      id: \"routes/api.health\",\n      parentId: \"root\",\n      path: \"api/health\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/api-docs\": {\n      id: \"routes/api-docs\",\n      parentId: \"root\",\n      path: \"api-docs\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/register\": {\n      id: \"routes/register\",\n      parentId: \"root\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/tool.$id\": {\n      id: \"routes/tool.$id\",\n      parentId: \"root\",\n      path: \"tool/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/profile\": {\n      id: \"routes/profile\",\n      parentId: \"root\",\n      path: \"profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/browse\": {\n      id: \"routes/browse\",\n      parentId: \"root\",\n      path: \"browse\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/share\": {\n      id: \"routes/share\",\n      parentId: \"root\",\n      path: \"share\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "ws", "import_drizzle_orm", "uuidv4", "bcrypt", "bcrypt", "loader", "import_node", "requireAuth", "loader", "loader", "import_node", "requireAuth", "loader", "loader", "import_node", "requireAuth", "loader", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "users", "items", "action", "loader", "import_node", "requireAuth", "loader", "items", "action", "action", "loader", "import_node", "requireAuth", "loader", "users", "action", "action", "import_node", "action", "import_node", "action", "jwt", "action", "loader", "import_node", "requireAuth", "loader", "action", "action", "loader", "import_node", "requireAuth", "loader", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "users", "items", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "items", "users", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "users", "loader", "import_node", "loader", "meta", "import_react", "import_jsx_dev_runtime", "action", "meta", "import_react", "import_node", "import_jsx_dev_runtime", "meta", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "action", "loader", "meta", "import_react", "import_node", "import_jsx_dev_runtime", "meta", "loader", "action", "import_react", "import_jsx_dev_runtime", "meta", "import_react", "import_jsx_dev_runtime", "loader", "import_node", "action", "meta", "import_react", "import_node", "import_jsx_dev_runtime", "meta", "action", "action", "meta", "import_node", "import_react", "import_jsx_dev_runtime"]
}
